#
# data/CsvInterpretor.java
#
CsvBitNotSpecified = La ligne %d du fichier csv '%s' ne contient pas le bit %d de la variable '%s', abandon.
CsvDuplicatedBit = La ligne %d du fichier csv '%s' contient le double du bit %d de la variable '%s', abandon.
CsvDuplicatedVar = La ligne %d du fichier csv '%s' contient plusieurs fois la variable '%s', abandon.
CsvIncorrectBitOrder = La ligne %d du fichier csv '%s' contient une s\u00e9quence binaire mal ordonn\u00e9e pour la variable '%s', abandon.
CsvIncorrectEmpty = La ligne %d du fichier csv '%s' contient un champ vide incorrect \u00e0 la position %d, abandon.
CsvIncorrectLine = La ligne %d du fichier csv '%s' comporte %d entr\u00e9es au lieu des %d obligatoires, abandon.
CsvIncorrectVarName = La ligne %d du fichier csv '%s' contient l'\u00e9tiquette malformatt\u00e9e '%s', abandon
CsvInvalidEntry = La ligne %d du fichier csv '%s' contient une entr\u00e9e non valide '%s' dans le champ %d, abandon.
CsvNoInputsFound = La ligne %d du fichier csv '%s' ne contient aucune entr\u00e9e, abandon.
CsvNoSepFound = La ligne %d du fichier csv '%s' ne contient aucun champ s\u00e9parateur, abandon.
CsvNotEnoughEmpty = La ligne %d du fichier csv '%s' ne contient pas assez de champs vides apr\u00e8s la variable '%s', abandon.
#
# data/ExpressionRenderData.java
#
expressionEmpty = (vide)
#
# file/AnalyzerTexWriter.java
#
latexBabelLanguage = french
latexEmpty = Analyseur vide
latexEmptyText = Comme l'analyseur n'avait pas de variables d'entr\u00e9e et/ou de sortie au moment o\u00f9 ce document a \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9, rien ne s'affiche.
latexHeader = Document g\u00e9n\u00e9r\u00e9 par Logisim-evolution sur %s
latexIntroduction = introduction
latexIntroductionText = Ce document a \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9 par logisim-evolution. Toute partie des sources TeX peut \u00eatre utilis\u00e9e dans vos propres documents sans aucun probl\u00e8me. Si vous souhaitez utiliser tout/partie des sources TeX g\u00e9n\u00e9r\u00e9es, veuillez (1) ne pas oublier d\u2019inclure les packages requis et (2) inclure une remarque indiquant que cette source a \u00e9t\u00e9 g\u00e9n\u00e9r\u00e9e par logisim-evolution.
latexKarnaugh = Diagrammes de Karnaugh
latexKarnaughEmpty = Diagrammes de Karnaugh vides
latexKarnaughFilledIn = Rempli dans les diagrammes de Karnaugh
latexKarnaughFilledInGroups = Rempli dans les diagrammes de Karnaugh avec des couvertures
latexKarnaughText = Cette section pr\u00e9sente diff\u00e9rentes versions des diagrammes de Karnaugh des fonctions donn\u00e9es.
latexKarnaughToBig = Impossible d'afficher les diagrammes kranaugh avec plus de %d entr\u00e9es.
latexMinimal = Expressions minimales
latexTruthTable = Table de v\u00e9rit\u00e9
latexTruthTableComlete = Table de v\u00e9rit\u00e9 compl\u00e8te
latexTruthTableCompact = Table de v\u00e9rit\u00e9 compact\u00e9e
latexTruthTableText = Le tableau peut \u00eatre trop gros pour \u00eatre affich\u00e9 sur la page. Au moment de la g\u00e9n\u00e9ration, aucun calcul n'a \u00e9t\u00e9 effectu\u00e9 sur la taille du tableau par rapport \u00e0 la largeur/hauteur de la page.
latexTruthTableToBig = \\\\ ~ \\\\ La table de v\u00e9rit\u00e9 a plus de %d entr\u00e9es, cela n'a aucun sens de le montrer ici.
tableLatexFilter = Document TeX Logisim-evolution (*.tex)
#
# file/TruthtableCsvFile.java
#
tableCsvFileFilter = Table de v\u00e9rit\u00e9 Logisim-evolution (* .csv)
#
# file/TruthtableTextFile.java
#
tableParseErrorMessage = Ignorer les erreurs et r\u00e9essayer?
tableParseErrorTitle = Erreur d'analyse de la table de v\u00e9rit\u00e9
tableRemark1 = # Table de v\u00e9rit\u00e9
tableRemark2 = # G\u00e9n\u00e9r\u00e9 \u00e0 partir du circuit %s
tableRemark3 = # Export\u00e9 dans %s
tableRemark4 = # Conseils et remarques sur la mise en forme: \n# * Vous pouvez modifier ce fichier, puis le r\u00e9importer dans Logisim! \n# * Tout ce qui suit un '#' correspond \u00e0 un commentaire et sera ignor\u00e9. \n# * Lignes vides et lignes de s\u00e9paration (par exemple, ~~~~~~) sont ignor\u00e9s. \n# * Conservez les noms de colonne simples (sans espace, ni ponctuation, etc.) \n# * 'Nom [N..0]' indique une variable de N + 1 bits , alors que \n# 'Nom' \u00e0 lui seul indique une variable de 1 bit. \n# * Vous pouvez utiliser 'x' ou '-' pour indiquer \ "ne vous souciez pas \" pour des \n# bits d'entr\u00e9e et de sortie . \n# * Vous pouvez utiliser la notation binaire (par exemple, '10100011xxxx') ou \n# ou hex (par exemple, 'C3x'). Logisim d\u00e9terminera qui est lequel.
tableTxtFileFilter = Table de v\u00e9rit\u00e9 Logisim-evolution (* .txt)
#
# gui/Analyzer.java
#
analyzePleaseWait = SVP. attendez...
analyzerWindowTitle = Analyse Combinatoire
exportLatexButton = Exporter TeX
exportTableButton = Tableau d'exportation
expressionTab = Expression
expressionTabTip = Visualiser et manipuler les expressions de sortie.
importTableButton = Tableau d'importation
inputsOutputsTab = Entr\u00e9es & Sorties
inputsOutputsTabTip = Affichez et modifiez l'ensemble des variables d'entr\u00e9e et de sortie.
minimizedTab = Karnaugh
minimizedTabTip = Visualiser les tables de Karnaugh pour chaque entr\u00e9e.
tableTab = Table
tableTabTip = Visualiser et manipuler la table de v\u00e9rit\u00e9.
#
# gui/BuildCircuitButton.java
#
buildCircuitButton = Construire le circuit
buildConfirmReplaceMessage = Etes-vous s\u00fbr de vouloir remplacer le circuit %s?
buildConfirmReplaceTitle = Confirmer le remplacement
buildDialogErrorTitle = R\u00e9alisation du circuit impossible
buildDialogTitle = R\u00e9aliser le circuit
buildNameLabel = Nom du circuit:
buildNandsLabel = Utiliser des ports NAND uniquement
buildNeedCircuitError = Vous devez d\u00e9finir un nom de circuit.
buildNeedProjectError = Vous devez s\u00e9lectionner un projet destination.
buildProjectLabel = Projet de destination:
buildTwoInputsLabel = Utiliser des portes \u00e0 deux entr\u00e9es uniquement
replaceCircuitAction = Remplacement du circuit
#
# gui/CsvReadParameterDialog.java
#
ConfirmCsvParameters = Continuer
cvsFilePreview = Aper\u00e7u des quatre premi\u00e8res lignes du fichier lu:
seperatorSpace = {espace}
SeperatorTab = {tab}
UsedQuotesInFile = S\u00e9lectionnez le caract\u00e8re "quote" utilis\u00e9 dans le fichier cvs:
UsedSeperatorInFile = S\u00e9lectionnez le caract\u00e8re "s\u00e9parateur" utilis\u00e9 dans le fichier csv:
#
# gui/ExportLatexButton.java
#
cantWriteMessage = Impossible d'\u00e9crire le fichier:% s
confirmOverwriteMessage = \u00cates-vous s\u00fbr de vouloir \u00e9craser le fichier% s?
confirmOverwriteTitle = Confirmer l'\u00e9crasement
saveButton = Exporter la  table
saveErrorTitle = Erreur d'enregistrement du fichier
#
# gui/ExpressionTab.java
#
cantImportFormatError = Impossible d'importer ce type de donn\u00e9es
outputExpressionEdit = Expressions de sortie (double-cliquez pour \u00e9diter):
#
# gui/ImportTableButton.java
#
cantReadMessage = Impossible de lire le fichier:% s
DoNotKnowHowto = impossible de lire ou \u00e9crire des fichiers '%s' (l'extension doit \u00eatre .txt ou .csv).
notFileMessage = Pas un fichier:% s
openButton = Exporter la  table de v\u00e9rit\u00e9
openErrorTitle = Erreur de lecture du fichier
#
# gui/KarnaughMapPanel.java
#
karnaughNoInputsError = Aucune entr\u00e9e disponible.
karnaughNoOutputError = Aucune entr\u00e9e s\u00e9lectionn\u00e9e.
karnaughTooManyInputsError = Trop d'entr\u00e9es pour la table.
NoSelectedKmapGroup = Aucun groupe s\u00e9lectionn\u00e9.
SelectedKmapGroup = Groupe s\u00e9lectionn\u00e9:
#
# gui/MinimizedTab.java
#
expressionAltLogicrepresentation = Logique alternative
expressionCalc = Calculer une expression
expressionLogicrepresentation = Logique
expressionMathrepresentation = Math\u00e9matique
ExpressionNotation = Notation:
expressionProgbitsrepresentation = Programmation avec des bits
expressionProgboolsrepresentation = Programmation avec des bool\u00e9ens
KMapLinedStyle = Doubl\u00e9
KmapNumberedStyle = Num\u00e9rot\u00e9
KmapStyle = Style:
minimizedFormat = Format:
minimizedProductOfSums = Produit des sommes
minimizedSetButton = D\u00e9finir comme expression
minimizedSumOfProducts = Somme des produits
#
# gui/OutputSelector.java
#
outputSelectLabel = Sortie:
#
# gui/TableTab.java
#
tableCompact = R\u00e9duire les lignes dupliqu\u00e9es
tableExpand = Afficher toutes les lignes
tableNoInputs = (pas d'entr\u00e9es)
tableNoOutputs = (pas de sorties)
tableRowsShown = %d de %d lignes affich\u00e9es
#
# gui/TableTabCaret.java
#
tabcaretCompactRows = Lignes de compactage
#
# gui/TableTabClip.java
#
clipPasteEndError = Le presse papier exc\u00e8de la fin de la table.
clipPasteErrorTitle = Erreur de collage
clipPasteSizeError = La destination doit \u00eatre de la m\u00eame taille que le presse papier.
clipPasteSupportedError = Le contenu du presspapier ne peut pas \u00eatre coll\u00e9 dans l'\u00e9diteur.
#
# gui/VariableTab.java
#
inputVariables = Variables d'entr\u00e9e
outputVariables = Variables de sortie
variableClickToAdd = Cliquez pour ajouter une nouvelle variable
variableDuplicateError = Le nom double une variable existante.
variableMaximumError = (Taille maximum de %s atteinte.)
variablePartError = Le nom ne peut pas contenir '%s'.
variableRangeFinalPar = Plage: manque ] directement apr\u00e8s l'indice LSB
variableRangeInvalChar = Plage: caract\u00e8res non valides apr\u00e8s le ]
variableRangeMSBWrong = Plage: commen\u00e7ant par [ doit \u00eatre suivi d'un nombre
variableRangeStartPar = Palge: [ manquant
variableRangeWrongLB = Plage: l'index MSB doit \u00eatre plus grand / \u00e9gal \u00e0 l'index LSB
variableRangeWrongSep = Plage: l'index MSB et l'index LSB doivent \u00eatre s\u00e9par\u00e9s par ..
variableStartError = Le nom doit commencer par une lettre.
#
# model/Entry.java
#
busError = Conflit entre les valeurs de sortie du circuit.
oscillateError = Le circuit oscille.
#
# model/Parser.java
#
badVariableName = %s n'est pas une variable d'entr\u00e8e.
implicitAndOperator = (AND Implicite)
invalidCharacterError = Caract\u00e9res non reconnus: %s
lparenMissingError = Il manque une parenth\u00e8se ouvrante.
missingBraceError = Aucune accolade correspondante: "%s"
missingIdentifierError = Identifiant manquant avant indice: "%s"
missingLeftOperandError = Il manque l'op\u00e9rande gauche de %s.
missingRightOperandError = Il manque l'op\u00e9rande droite de %s.
missingSubscriptError = Indice manquant: "%s"
rparenMissingError = Il manque une parenth\u00e8se fermante.
unexpectedApostrophe = Erreur d'apostrophe ("'")
unexpectedAssignmentError = Op\u00e9rateur d'affectation inattendue: "% s"
#
# model/Var.java
#
badVariableBitFormError = Le nom de la variable doit \u00eatre de la forme 'nom[i]'
badVariableColonError = Le nom de la variable doit appara\u00eetre avant ':'
badVariableIndexError = L'indice de bit variable doit \u00eatre un entier
variableFormat = Les variables doivent \u00eatre de la forme 'nom[N..0]'
variableTooMuchBits = Les variables ne peuvent pas avoir plus de 32 bits de large
