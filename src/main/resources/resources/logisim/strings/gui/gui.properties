#
# appear/AppearanceEditHandler.java
#
deleteSelectionAction = Delete Selection
duplicateSelectionAction = Duplicate Selection
pasteClipboardAction = Paste Clipboard
#
# appear/ClipboardActions.java
#
copySelectionAction = Copy Selection
cutSelectionAction = Cut Selection
#
# appear/RevertAppearanceAction.java
#
revertAppearanceAction = Revert Appearance
#
# appear/ShowStateDialog.java
#
showStateDialogCancelButton = Cancel
showStateDialogEmptyNode = Empty circuit %s
showStateDialogNodeTitle = State for %s
showStateDialogOkButton = OK
showStateDialogTitle = State for %s
#
# chronogram/chronogui/ChronoFrame.java
#
ButtonExport = Export...
ButtonLoad = Load file
ChronoTitle = Timing diagram
ChronoHelp = Displays signal values in real time.
ChronoPrintTitle = Timing diagram: %s of %s
ButtonExportAsImage = Export as image
InputFileLoaded = Loaded File:
InputFileNoSysclk = No sysclk signal found
SimStatusCurrentScheme = Simulating the current scheme
SimStatusName = Status:
SimStatusNoSignal = No signal selected in Simulate->Chronogram
SimStatusNoSysclk = Add 'sysclk' signal in Simulate->Chronogram for real time use, or load file
NoSignalsSelected = No signals currently selected. | Add pins to circuit, or select signals | using the "Options" panel.
optionsTab = Options
optionsHelp = Configure timing diagram signals, mode, and timing
selectionLabel = Signals and Formats
modeLabel =  Logging Mode
timingLabel = Timing Options
historyLabel = History
historyUnlimited = Store unlimited history
historyLimit = Number of recent values to store:
timeScale = Time scale:
gateDelay = Gate delay:
cycleLength = Clock cycle: %s ticks
nsFormat = %s ns
usFormat = %s \u00b5s
msFormat = %s ms
sFormat = %s s
perSecond = per second
perTick = per tick
stepTime = Stop-motion mode
stepCoarse = Coarse-grained summary
stepCoarseDescription = Data is captured only when all signals have stabilized, ignoring any transient signal fluctuations that may happen during propagation. Each captured value is recorded as if it were held stable for %s.
fineDetail = Capture fine-grained details
stepFineDescription = Data is captured whenever any signal value changes, including any transient signal fluctuations that may happen during propagation. Transient fluctuations are recorded as if the gate delay were %s, and stable signals are recorded as if they were held stable for %s.
realTime = Continuous real-time mode
realCoarse = Coarse-grained summary
realCoarseDescription = Data is captured continuously, whenever the simulator is enabled, but transient signal fluctuations are ignored. Each second of real time is recorded as %s of simulated circuit time.
realFine = Fine-grained details
realFineDescription = Data is captured continuously, whenever the simulator is enabled, includin transient signal fluctuations. Each second of real time is recorded as %s of simulated circuit time.
clockTime = Clocked mode
clockCoarse = Coarse-grained summary
clockCoarseDescriptionDual = Data is captured at each clock transition, ignoring any transient fluctuations that may happen between transitions or during propagation. Each clock cycle is recorded as if it took %s per cycle (%s per tick).
clockCoarseDescriptionRising = Data is captured at each rising clock transition, ignoring any transient fluctuations that may happen between transitions or during propagation. Each clock cycle is recorded as if it took %s per cycle (%s per tick).
clockCoarseDescriptionFalling = Data is captured at each falling clock transition, ignoring any transient fluctuations that may happen between transitions or during propagation. Each clock cycle is recorded as if it took %s per cycle (%s per tick).
clockCoarseDescriptionHigh = Data is captured continuously only when the clock is high, ignoring any transient signal fluctuations that may happen during propagation or while the clock is low. Changes when the clock is high are recorded as if the gate delay were %s, and each clock cycle is recorded as if it took %s per cycle (%s per tick).
clockCoarseDescriptionLow = Data is captured continuously only when the clock is low, ignoring any transient signal fluctuations that may happen during propagation or while the clock is high. Changes when the clock is low are recorded as if the gate delay were %s, and each clock cycle is recorded as if it took %s per cycle (%s per tick).
clockFine = Fine-grained details
clockFineDescription = Data is captured whenever any signal value changes, including any transient signal fluctuations that may happen during propagation. Transient fluctuations are recorded as if the gate delay were %s, and each clock cycle is recorded as if it took %s per cycle (%s per tick).
clockSourceLabel = Clock Source:
clockSourceNone = n/a
selectClockDriverMessage = This feature requires a clock component, but none were found within the circuit. Either add a clock component to the circuit, or select one of the inputs below to serve as a clock.
selectClockObserverMessage = Select a clock or signal to use as the primary clock.
selectClockMissingMessage = This mode requires a clock component, but none were found within the circuit. Either add a clock component to the circuit, or select one of the signals below to serve as a clock.
selectClockMultipleMessage = The circuit contains multiple clocks. Select one of the clocks or signals below to use as the primary clock.
clockDisciplineLabel = Clock Discipline:
clockDisciplineRising = capture on rising edge
clockDisciplineFalling = capture on falling edge
clockDisciplineDual = capture on both edges
clockDisciplineHigh = capture during clock high
clockDisciplineLow = capture during clock low
#
# chronogram/chronogui/LeftPanel.java
#
SignalName = Signal Name
SignalValue = Signal Value
#
# chronogram/chronogui/PopupMenu.java
#
BusExpand = Expand
BusFormat = Format
#
# generic/AttributeSetTableModel.java
#
attributeChangeInvalidError = Attribute unchanged because request is invalid
FPGA_Supported = FPGA supported:
#
# generic/AttrTable.java
#
attributeChangeInvalidTitle = Value Invalid
attributeDialogTitle = Select Value
#
# generic/ZoomControl.java
#
zoomShowGrid = Toggle whether grid is shown
zoomAuto = Auto
#
# hex/Clip.java
#
hexPasteErrorTitle = Paste Error
hexPasteSupportedError = The clipboard contents cannot be pasted into the editor.
hexPasteTooSmall = Clipboard (%d words) is too small to fill selected\nregion (%d words). Paste anyway?
#
# hex/HexFile.java
#
confirmOverwriteMessage = The file already exists. Do you want to overwrite it?
confirmOverwriteTitle = Confirm Overwrite
hexFileOpenError = Could not open file: %s
hexFileWriteError = Error writing file: %s
hexFormatTitle = Hex file format
ramLoadDialogTitle = Load Memory Image
ramLoadErrorTitle = Memory Image Load Error
ramSaveDialogTitle = Save Memory Image
ramSaveErrorTitle = Memory Image Save Error
#
# hex/HexFrame.java
#
closeButton = Close Window
hexFrameMenuItem = Hex Editor
hexFrameTitle = Hex Editor
openButton = Open...
saveButton = Save...
#
# log/FilePanel.java
#
fileAppendOption = Append
fileCancelOption = Cancel
fileCannotWriteMessage = You do not have permission to write to "%s."
fileCannotWriteTitle = File Not Available
fileDisableButton = Disable
fileDisabled = File output disabled.
fileEnableButton = Enable
fileEnabled = File output enabled.
fileExistsMessage = The file "%s" already exists.
fileExistsTitle = File Already Exists
fileHeaderCheck = Include Header Line
fileHelp = Configure file output.
fileLabel = File:
fileOverwriteOption = Overwrite
fileSelectButton = Select...
fileTab = File
#
# log/LogFrame.java
#
logFrameMenuItem = %s: Timing diagram
logFrameTitle = Timing diagram %s of %s
addRemoveSignals = Add or Remove Signals
#
# log/SelectionPanel.java
#
selectionTab = Signals
selectionHelp = Select signals to view.
selectionDesc = Drag signals to select or rearrange.
exploreLabel = Signals available in circuit:
listLabel = Signals to be viewed:
timeSelectionClock = Choose your clock:
timeSelectionEnable = Enable time selection
timeSelectionFrequency = Frequency:
#
# log/TablePanel.java
#
tableHelp = View log of recent values.
tableTab = Table
#
# log/ValueTable.java
#
tableEmptyMessage = Selection is empty.
tableHeaderHelp = Radix:
#
# main/AttrTableCircuitModel.java
#
cannotModifyCircuitError = This circuit cannot be modified.
changeCircuitAttrAction = Change Circuit
circuitAttrTitle = Circuit: %s
#
# main/AttrTableComponentModel.java
#
changeAttributeAction = Change Attribute
#
# main/AttrTableSelectionModel.java
#
hdlAttrTitle = VHDL Entity: %s
selectionAttributeAction = Change Selection Attribute
selectionMultiple = %s × %s
selectionVarious = Various items × %s
#
# main/Canvas.java
#
canvasExceptionError = Simulation halted by internal error
canvasOscillationError = Oscillation apparent
canvasWidthError = Incompatible widths
#
# main/ExportImage.java
#
couldNotCreateFile = The file could not be created.
exportEmptyCircuitsMessage = No non-empty circuits are available for export.
exportEmptyCircuitsTitle = Cannot Export
exportGifFilter = GIF Files (*.gif)
exportImageDirectorySelect = Select Export Directory
exportImageProgress = Computing Image...
exportImageSelect = Export Image
exportJpgFilter = JPEG Files (*.jpeg, *.jpg)
exportNewDirectoryErrorMessage = The directory could not be created.
exportNewDirectoryErrorTitle = Cannot Create Directory
exportPngFilter = PNG Files (*.png)
exportSvgFilter = SVG Files (*.svg)
exportTikZFilter = TikZpicture Files (*.tex)
labelCircuits = Circuits:
labelImageFormat = Image Format:
labelPrinterView = Printer View:
labelScale = Scale Factor:
#
# main/Frame.java
#
cancelOption = Cancel
confirmCloseTitle = Confirm Close
confirmDiscardMessage = What should happen to your unsaved changes to %s?
designTab = Design
discardOption = Discard
propertiesTab = Properties
saveOption = Save
simulateTab = Simulate
stateTab = State
titleCircFileKnown = %s of %s
titleFileKnown = %s
#
# main/Print.java
#
labelHeader = Header:
labelRotateToFit = Rotate To Fit:
printEmptyCircuitsMessage = No non-empty circuits are available for printing.
printEmptyCircuitsTitle = Cannot Print
printParmsTitle = Print Parameters
#
# main/SelectionActions.java
#
circularError = Circular error
dropComponentAction = Drop Component
dropComponentsAction = Drop Components
moveSelectionAction = Move Selection
pasteCloneCancel = Cancel
pasteCloneIgnore = Ignore
pasteCloneQuery = The clipboard includes "%s." The project doesn't include it, but it has another of the same name.
pasteCloneReplace = Replace
pasteCloneTitle = Component
pasteDropMessage = Some clipboard components were not pasted because the project libraries do not support them:
pasteDropTitle = Components Not Pasted
#
# main/SimulationToolbarModel.java
#
simulateDisableTicksTip = Disable clock ticks
simulateEnableTicksTip = Enable clock ticks
simulateRunTip = Run simulator continuously
simulateStepTip = Step simulator once
simulateStopTip = Stop simulator
simulateTickFullTip = Tick clock one full cycle
simulateTickHalfTip = Tick clock one half cycle
#
# main/StatisticsDialog.java
#
statsCloseButton = Close
statsComponentColumn = Component
statsDialogTitle = %s Statistics
statsLibraryColumn = Library
statsRecursiveCountColumn = Recursive
statsSimpleCountColumn = Simple
statsUniqueCountColumn = Unique
#
# main/TickCounter.java
#
tickRateHz = %s Hz
tickRateKHz = %s kHz
#
# main/ToolAttributeAction.java
#
changeToolAttrAction = Change Tool Attribute
#
# main/ToolboxToolbarModel.java
#
projectAddCircuitTip = Add circuit
projectEditAppearanceTip = Edit viewed circuit's appearance
projectMoveCircuitDownTip = Move viewed circuit down list
projectMoveCircuitUpTip = Move viewed circuit up list
projectRemoveCircuitTip = Remove viewed circuit
#
# menu/EditPopup.java
#
editAddControlItem = Add Vertex
editClearItem = Delete
editCopyItem = Copy
editCutItem = Cut
editDuplicateItem = Duplicate
editLowerBottomItem = Lower To Bottom
editLowerItem = Lower Selection
editRaiseItem = Raise Selection
editRaiseTopItem = Raise To Top
editRemoveControlItem = Remove Vertex
#
# menu/MenuEdit.java
#
editCantRedoItem = Can't Redo
editCantUndoItem = Can't Undo
editMenu = Edit
editPasteItem = Paste
editRedoItem = Redo %s
editSelectAllItem = Select All
editUndoItem = Undo %s
#
# menu/MenuFile.java
#
fileCloseItem = Close
fileExportImageItem = Export Image...
fileMenu = File
fileMergeItem = Merge...
fileNewItem = New
fileOpenItem = Open...
filePreferencesItem = Preferences...
filePrintItem = Print...
fileQuitItem = Exit
fileSaveAsItem = Save As...
fileSaveItem = Save
#
# menu/MenuHelp.java
#
helpAboutItem = About...
helpDisplayError = Could not display help data.
helpGuideItem = User's Guide
helpLibraryItem = Library Reference
helpMenu = Help
helpNotFoundError = Help data not found.
helpsetUrl = doc/doc_en.hs
helpTutorialItem = Tutorial
helpUnavailableError = Could not load help data.
helpWindowTitle = Logisim-evolution Documentation
helpProjectWebsite = Project Website
#
# menu/MenuProject.java
#
projectImportVhdlItem = Import VHDL Entity...
projectMenu = Project
projectMoveCircuitDownItem = Move Circuit Down
projectMoveCircuitUpItem = Move Circuit Up
projectOptionsItem = Options...
projectRevertAppearanceItem = Revert To Default Appearance
projectUnloadLibrariesItem = Unload Libraries...
#
# menu/MenuSimulate.java
#
simulateDownStateMenu = Go In To State
simulateGenVhdlFilesItem = Restart VHDL simulator
simulateLogItem = Timing diagram
simulateMenu = Simulate
simulateRunItem = Auto-Propagate
simulateResetItem = Reset Simulation
simulateStepItem = Single-Step Propagation
simulateTestItem = Test Vector...
simulateTickFreqItem = %s Hz
simulateTickHalfItem = Manual Tick Half Cycle
simulateTickFullItem = Manual Tick Full Cycle
simulateTickItem = Auto-Tick Enabled
simulateTickFreqMenu = Auto-Tick Frequency
simulateTickKFreqItem = %s kHz
simulateUpStateMenu = Go Out To State
simulateVhdlEnableItem = VHDL Simulation Enabled
#
# menu/OpenRecent.java
#
fileOpenRecentItem = Open Recent
fileOpenRecentNoChoices = (None)
#
# menu/Popups.java
#
circuitMenu = Circuit
libMenu = Library
projectAddCircuitItem = Add Circuit...
projectAddVhdlItem = Add VHDL Entity...
projectAnalyzeCircuitItem = Analyze Circuit
projectEditCircuitAppearanceItem = Edit Circuit Appearance
projectEditCircuitLayoutItem = Edit Circuit Layout
projectToggleCircuitAppearanceItem = Switch Between Layout and Appearance Views
projectEditVhdlItem = Edit VHDL Code
projectGetCircuitStatisticsItem = Get Circuit Statistics
projectLoadBuiltinItem = Built-in Library...
projectLoadJarItem = JAR Library...
projectLoadLibraryItem = Load Library
projectLoadLogisimItem = Logisim-evolution Library...
projectReloadLibraryItem = Reload Library
projectRemoveCircuitItem = Remove Circuit
projectRemoveVhdlItem = Remove VHDL Entity
projectSetAsMainItem = Set As Main Circuit
projectUnloadLibraryItem = Unload Library
projMenu = Project
vhdlMenu = VHDL Entity
#
# menu/PrintHandler.java
#
couldNotCreateImage = The image could not be created.
exportImageButton = Export
exportImageFileSelect = Select Export File
printError = Error during printing: %s
printErrorTitle = Error During Print
#
# menu/ProjectCircuitActions.java
#
analyzeErrorTitle = Cannot Analyze
analyzeNoExpressionTitle = Expression Not Determined
analyzeTooManyInputsError = Analysis cannot handle more than %s inputs.
analyzeTooManyOutputsError = Analysis cannot handle more than %s outputs.
circuitCreateTitle = Adding circuit action
circuitNameDialogTitle = Input Circuit Name
circuitNameExists = This name is already in use in your project and can therefore not be used.
circuitNameInvalidName = The name is invalid (it must follow the rule ([a-zA-Z]+\\w*)).
circuitNameKeyword = This name is a keyword and can therefore not be used.
circuitNameMissingError = Every circuit requires a name.
circuitNamePrompt = Circuit Name:
circuitRemoveErrorTitle = Cannot Remove Circuit
circuitRemoveLastError = Library must contain at least one circuit.
circuitRemoveUsedError = Circuit used in other circuits cannot be removed.
vhdlNameDialogTitle = Input VHDL Entity Name
vhdlNamePrompt = VHDL Entity Name:
#
# menu/ProjectLibraryActions.java
#
jarClassNamePrompt = Class Name:
jarClassNameTitle = Enter JAR Class
loadBuiltinDialogTitle = Load Built-in Library
loadBuiltinErrorTitle = Cannot Load Built-In Library
loadBuiltinNoneError = All built-in libraries are already loaded.
loadJarDialogTitle = Load JAR File
loadLogisimDialogTitle = Load Logisim File
unloadErrorTitle = Cannot Remove Library
unloadLibrariesDialogTitle = Select Libraries To Unload
unloadNoneError = All open libraries are in use.
#
# opts/MouseOptions.java
#
mouseHelp = Edit tools associated with mouse buttons.
mouseMapNone = No Tool Selected
mouseMapText = Click Using Combination
mouseMapText2 = To Map %s
mouseRemoveButton = Remove
mouseTitle = Mouse
#
# opts/OptionsActions.java
#
addMouseMappingAction = Add Mouse Mapping
removeMouseMappingAction = Remove Mouse Mapping
setOptionAction = Set %s
#
# opts/OptionsFrame.java
#
optionsFrameMenuItem = %s: Project Options
optionsFrameTitle = %s Project Options
revertButton = Reset All Settings
revertHelp = Revert project settings to template defaults.
revertTitle = Reset
#
# opts/SimulateOptions.java
#
gateUndefined = Gate output when undefined
MemoriesStartupUnknown = Memory elements start in unknown/random state (rather that 0)
simulateHelp = Configure the engine for simulating circuit behavior.
simulateLimit = Iterations until oscillation
simulateRandomness = Add noise to component delays
simulateTitle = Simulation
#
# opts/ToolbarActions.java
#
toolbarAddAction = Add Toolbar Button
toolbarInsertSepAction = Insert Separator
toolbarMoveAction = Move Toolbar Button
toolbarRemoveAction = Remove Toolbar Button
toolbarRemoveSepAction = Remove Separator
#
# opts/ToolbarOptions.java
#
toolbarAddSeparator = Add Separator
toolbarAddTool = Add Tool
toolbarHelp = Edit tools appearing in toolbar.
toolbarMoveDown = Move Down
toolbarMoveUp = Move Up
toolbarRemove = Remove
toolbarTitle = Toolbar
#
# PrefMonitorBooleanConvert.java
#
OptionConvertAll = Converting current appearance of Pins and Probes
OptionConvertAllPinsProbes = Convert all Pins and Probes in the project to use the appearance "%s"?
OptionNo = No, keep as they are
OptionYes = Yes, convert
#
# prefs/ExperimentalOptions.java
#
accelD3D = Direct 3D
accelDefault = Use defaults
accelLabel = Graphics acceleration:
accelNone = None
accelOpenGL = OpenGL
accelRestartLabel = Restart Logisim for changes to take effect.
experimentHelp = Enable features that haven't yet been thoroughly tested
experimentTitle = Experimental
#
# prefs/IntlOptions.java
#
intlGateShape = Gate shape:
intlHelp = Edit localization preferences
intlLocale = Language:
intlReplaceAccents = Replace accented characters
intlTitle = International
shapeDIN40700 = DIN 40700
shapeRectangular = IEC
shapeShaped = ANSI
#
# prefs/LayoutOptions.java
#
layoutAddAfter = After adding component:
layoutAddAfterEdit = Switch to Edit Tool
layoutAddAfterUnchanged = Keep at component tool
layoutAddShowGhosts = Show ghosts while adding
layoutAntiAliasing = Use anti aliasing
layoutAttributeHalo = Show attribute halo
layoutDefaultApearance = Use the default appearances provided by:
layoutHelp = Configure behavior of layout editor
layoutMoveKeepConnect = Keep connections while moving
layoutNamedCircuitBoxesFixedSize = Use fixed size circuit boxes
layoutPrinterView = Printer view
layoutRadix1 = First radix when wire poked:
layoutRadix2 = Second radix when wire poked:
layoutShowTips = Show component tips
layoutTitle = Layout
layoutUseNewInputOutputSymbols = Use new input and output shapes
layoutPinAppearance = Draw connection pins as:
layoutPinAppearanceDotSmall = Small dot
layoutPinAppearanceDotMedium = Medium dot
layoutPinAppearanceDotBig = Big dot
layoutPinAppearanceDotBigger = Bigger dot
#
# prefs/PreferencesFrame.java
#
preferencesFrameMenuItem = Preferences
preferencesFrameTitle = Preferences
#
# prefs/SimOptions.java
#
simBusColTitle = Bus color:
simColorBlindColors = Color blind colors
simDefaultColors = Logisim default colors
simDontCareCharTitle = Don't care character:
simErrorCharTitle = Error value character:
simErrorColTitle = Error color:
simFalseCharTitle = False value character:
simFalseColTitle = False color:
simHelp = Edit simulation colors and symbols used
simKmapColors = Map color %d:
simKmapColorsTitle = Karnaugh diagram map colors:
simNilColTitle = Unconnected color:
simStrokeColTitle = Wire/Bus stroke color:
simTitle = Simulation
simTrueCharTitle = True value character:
simTrueColTitle = True color:
simUnknownCharTitle = Unknown value character:
simUnknownColTitle = Unknown color:
simWidthErrorBackgroundTitle = Width error background color:
simWidthErrorCaptionTitle = Width error caption color:
simWidthErrorHighlightTitle = Width error highlight color:
simWidthErrorTitle = Width error color:
#
# prefs/TemplateOptions.java
#
selectDialogButton = Select
selectDialogTitle = Select Template
templateCustomOption = Custom template:
templateEmptyOption = Empty template
templateErrorMessage = Could not load template: %s
templateErrorTitle = Error Loading Template
templateHelp = Select the current template
templatePlainOption = Plain template
templateSelectButton = Select...
templateTitle = Template
#
# prefs/WindowOptions.java
#
windowHelp = Configure the main editing window
windowTickRate = Show tick rate
windowTitle = Window
windowToolbarHidden = Hidden
windowToolbarImportant = Important: changing the below values may have unpredictable results!
windowToolbarLocation = Toolbar location:
windowToolbarLookandfeel = Look and Feel:
windowToolbarPleaserestart = Please restart logisim.
windowToolbarPreview = Preview
windowToolbarReset = Reset window layout to Logisim's defaults
windowToolbarZoomfactor = Zoom factor
windowCanvasBgColor = Canvas Background Color:
windowGridBgColor = Grid Background Color:
windowGridDotColor = Grid Dot Color:
windowGridZoomedDotColor = Grid Zoomed Dot Color:
windowGridColorsReset = Reset grid colors to Logisim's defaults
#
# start/AboutCredits.java
#
creditsRoleFork = Fork from original project
creditsRoleOriginal = Original Version
#
# start/SplashScreen.java
#
progressFileCreate = Creating file...
progressFileLoad = Loading file...
progressFrameCreate = Creating window...
progressGuiInitialize = Initializing interface...
progressLibraries = Loading components...
progressProjectCreate = Creating project...
progressTemplateClose = Closing template...
progressTemplateCreate = Creating template...
progressTemplateLoad = Loading template...
progressTemplateOpen = Opening template...
startupCloseButton = Close
startupQuitButton = Quit
#
# start/Startup.java
#
argAccentsOption = -accents yes|no               use accented characters or ASCII equivalents
argAccentsOptionError = Argument for -accents option must be "yes" or "no".
argAnalyzeOption = -analyze          enable the analyze option
argCircuitOption = -circuit name     test the given circuit instead of main, used with "-tty table"
argClearOption = -clearprefs       clear application preferences at startup
argDuplicateSubstitutionError = Cannot substitute the same file multiple times.
argEmptyOption = -empty                        use empty template
argGatesOption = -gates style                  select "shaped" or "rectangular" gate style
argGatesOptionError = Argument for -gates option must be "shaped" or "rectangular".
argGeometryError = Argument for -geom must be "WxH" or "WxH+X+Y"
argGeometryOption = -geom WxH[+X+Y]  set geometry for main window
argHelpOption = -help             display this summary and exit
argLoadOption = -load file        load image file into RAM (works with -tty only)
argLocaleOption = -locale str                   use locale given in str
argNoSplashOption = -nosplash         hides splash screen at startup
argOneTemplateError = Only one template allowed.
argOptionHeader = options:
argPlainOption = -plain                        use standard Logisim template
argQuestaOption = -questa yes|no    use Questa Advanced Simulator to validate HDL entities
argQuestaOptionError = Argument for -questa option must be "yes" or "no".
argSubOption = -sub file1 file2  load file replacing library file1 with file2
argTemplateOption = -template file                use file as template
argTestCircGen = -test-circ-gen <circ_input> <circ_output> open up the circ file and write a new one to later check the Xml content
argTestCircuit = -test-circuit <path_to_circ> open up a circ file and start the test bench within it. It returns Success or fail.
argTestImplement = -test-fpga-implementation  <circ_input> [map_input] <circuit_name> <board> [tick frequency] [HDLONLY]: Test implementations design using circ_input file and optional map_input mapping file (obsolete since v3.3.3). The implementation circuit_name is the circuit choose to implement (FPGA_Top) and the board is the board name located in resources/logisim/boards/ without the xml extension. The optional tick frequency is in Hz. The optional switch HDLONLY will only generate the HDL-description and will not perform synthesis, P&R, and Download.
argTestOption = -test name file   run test vector from a file against named circuit, then exit
argTtyOption = -tty format       run without graphical interface
argTwoSubstitutionError = The "-sub" option must be followed by two parameters.
argUsage = usage: java %s [options] [filenames]
argVersionOption = -version          display version number and exit
invalidLocaleError = Locale given is not supported.
invalidLocaleOptionsHeader = Supported locales:
loadMultipleError = The "-load" option can be specified only once.
loadNeedsFileError = Using "-load" requires a filename provided on command line.
loadNeedsTtyError = The "-load" option works only in conjunction with "-tty".
templateCannotReadError = No permission to read template file %s.
templateMissingError = Template file %s does not exist.
ttyFormatError = -tty requires at least one of the following: halt, speed, stats, table, tty
ttyNeedsFileError = Using "-tty" requires a filename provided on command line.
#
# start/TtyInterface.java
#
loadIoError = Error while reading image file
loadNoRamError = No RAM was found for the "-load" option.
statsTotalWith = TOTAL (with sub circuits)
statsTotalWithout = TOTAL (without project's sub circuits)
ttyHaltReasonOscillation = halted due to detected oscillation
ttyHaltReasonPin = halted due to halt pin
ttyLoadError = Error loading circuit file: %s
ttyNoTtyError = No TTY or Keyboard component was found.
ttySpeedMsg = %s Hz (%s ticks in %s milliseconds)
#
# test/TestFrame.java
#
failMessage = Failed: %s
fileCannotParseMessage = Test vector in "%s" could not be parsed.\n Detail: %s.
fileCannotReadMessage = You do not have permission to read to "%s."
fileCannotReadTitle = File Not Available
fileWrongPinsMessage = Test vector in "%s" does not match circuit.\n Details: %s.
fileWrongPinsTitle = Error Loading Test Vector
loadButton = Load Vector
passMessage = Passed: %s
resetButton = Reset
runButton = Run
stopButton = Stop
testFrameMenuItem = %s: Test Vector
testFrameTitle = Test Vector %s of %s
#
# test/TestPanel.java
#
expectedValueMessage = Expected %s
failStatus = fail
passStatus = pass
statusHeader = Status
#
# test/TestThread.java
#
testFailed = Error on test vector %s:
testLoadingFailed = Error loading test vector: %s
testLoadingVector = Loading test vector "%s" ...
testResults = Passed: %s, Failed: %s
testRunning = Running %s vectors ...
testSetupFailed = Error preparing test vector: %s
untitled = Untitled
