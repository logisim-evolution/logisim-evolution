#
# appear/AppearanceEditHandler.java
#
deleteSelectionAction = Effacer la sélection
duplicateSelectionAction = Dupliquer la sélection
pasteClipboardAction = Coller le presse-papiers
#
# appear/ClipboardActions.java
#
copySelectionAction = Copier la sélection
cutSelectionAction = Couper la sélection
#
# appear/RevertAppearanceAction.java
#
revertAppearanceAction = Annuler la modification d'apparence
#
# appear/ShowStateDialog.java
#
showStateDialogCancelButton = Annuler
showStateDialogEmptyNode = Circuit vide %s
showStateDialogNodeTitle = État pour %s
showStateDialogOkButton = OK
showStateDialogTitle = État pour %s
#
# chronogram/chronogui/ChronoFrame.java
#
ButtonExport = Exporter...
ButtonLoad = Charger fichier
ChronoTitle = Chronogramme
ChronoHelp = Affiche les valeurs du signal en temps réel.
ChronoPrintTitle = Diagramme temporel : %s de %s
ButtonExportAsImage = Exporter en tant qu'image
InputFileLoaded = Fichier chargé :
InputFileNoSysclk = Pas de sysclk signal
SimStatusCurrentScheme = Simuler le schema courant
SimStatusName = Statut :
SimStatusNoSignal = Pas de signal sélectioné dans Simulate->Chronogram
SimStatusNoSysclk = Ajoutez un signal 'sysclk' dans Simulate->Chronogram pour une utilisation temps reel ou chargez un fichier
NoSignalsSelected = Aucun signal n'est actuellement sélectionné. | Ajoutez des broches au circuit ou sélectionnez des signaux à l'aide du panneau "Options".
optionsTab = Options
optionsHelp = Configurer les signaux, le mode et la synchronisation du diagramme de synchronisation
selectionLabel = Signaux et formats
modeLabel = Mode d'enregistrement
timingLabel = Options de chronométrage
historyLabel = Histoire
historyUnlimited = Stocker un historique illimité
historyLimit = Nombre de valeurs récentes à stocker :
timeScale = Échelle de temps :
gateDelay = Retard de la porte :
cycleLength = Cycle d'horloge : %s ticks
nsFormat = %s ns
usFormat = %s µs
msFormat = %s ms
sFormat = %s s
perSecond = par seconde
perTick = par tic
stepTime = Mode stop-motion
stepCoarse = Résumé à gros grains
stepCoarseDescription = Les données sont capturées uniquement lorsque tous les signaux se sont stabilisés, en ignorant les fluctuations transitoires du signal qui peuvent se produire pendant la propagation. Chaque valeur capturée est enregistrée comme si elle avait été maintenue stable pendant %s.
fineDetail = Capturez des détails fins
stepFineDescription = Les données sont capturées chaque fois que la valeur d'un signal change, y compris les fluctuations transitoires du signal qui peuvent se produire pendant la propagation. Les fluctuations transitoires sont enregistrées comme si le délai de la porte était de %s, et les signaux stables sont enregistrés comme s'ils étaient maintenus stables pendant %s.
realTime = Mode continu en temps réel
realCoarse = Résumé à gros grains
realCoarseDescription = Les données sont capturées en continu, chaque fois que le simulateur est activé, mais les fluctuations transitoires du signal sont ignorées. Chaque seconde de temps réel est enregistrée comme %s de temps de circuit simulé.
realFine = Détails fin
realFineDescription = Les données sont capturées en continu, chaque fois que le simulateur est activé, y compris les fluctuations transitoires du signal. Chaque seconde de temps réel est enregistrée comme %s de temps de circuit simulé.
clockTime = Mode cadencé
clockCoarse = Résumé à gros grains
clockCoarseDescriptionDual = Les données sont capturées à chaque transition d'horloge, en ignorant les fluctuations transitoires qui peuvent se produire entre les transitions ou pendant la propagation. Chaque cycle d'horloge est enregistré comme s'il prenait %s par cycle (%s par tick).
clockCoarseDescriptionRising = Les données sont capturées à chaque transition d'horloge montante, en ignorant les fluctuations transitoires qui peuvent se produire entre les transitions ou pendant la propagation. Chaque cycle d'horloge est enregistré comme s'il prenait %s par cycle (%s par tick).
clockCoarseDescriptionFalling = Les données sont capturées à chaque transition d'horloge descendante, en ignorant les fluctuations transitoires qui peuvent se produire entre les transitions ou pendant la propagation. Chaque cycle d'horloge est enregistré comme s'il prenait %s par cycle (%s par tick).
clockCoarseDescriptionHigh = Les données sont capturées en continu uniquement lorsque l'horloge est haute, en ignorant les fluctuations transitoires du signal qui peuvent se produire pendant la propagation ou lorsque l'horloge est basse. Les changements lorsque l'horloge est haute sont enregistrés comme si le délai de la porte était de %s, et chaque cycle d'horloge est enregistré comme s'il prenait %s par cycle (%s par tick).
clockCoarseDescriptionLow = Les données sont capturées en continu uniquement lorsque l'horloge est basse, en ignorant les fluctuations transitoires du signal qui peuvent se produire pendant la propagation ou lorsque l'horloge est haute. Les changements lorsque l'horloge est basse sont enregistrés comme si le délai de la porte était de %s, et chaque cycle d'horloge est enregistré comme s'il prenait %s par cycle (%s par tick).
clockFine = Détails détaillés
clockFineDescription = Les données sont capturées chaque fois qu'une valeur de signal change, y compris les fluctuations transitoires du signal qui peuvent se produire pendant la propagation. Les fluctuations transitoires sont enregistrées comme si le délai de la porte était de %s, et chaque cycle d'horloge est enregistré comme s'il prenait %s par cycle (%s par tick).
clockSourceLabel = Source d'horloge :
clockSourceNone = n/a
selectClockDriverMessage = Cette fonction nécessite un composant d'horloge, mais aucun n'a été trouvé dans le circuit. Vous pouvez soit ajouter un composant d'horloge au circuit, soit sélectionner l'une des entrées ci-dessous pour servir d'horloge.
selectClockObserverMessage = Sélectionnez une horloge ou un signal à utiliser comme horloge primaire.
selectClockMissingMessage = Ce mode nécessite un composant d'horloge, mais aucun n'a été trouvé dans le circuit. Vous pouvez soit ajouter un composant d'horloge au circuit, soit sélectionner l'un des signaux ci-dessous pour servir d'horloge.
selectClockMultipleMessage = Le circuit contient plusieurs horloges. Sélectionnez l'une des horloges ou l'un des signaux ci-dessous pour l'utiliser comme horloge primaire.
clockDisciplineLabel = Discipline de l'horloge :
clockDisciplineRising = capture sur le front montant
clockDisciplineFalling = capture sur le front descendant
clockDisciplineDual = capture sur les deux bords
clockDisciplineHigh = capture pendant l'horloge haute
clockDisciplineLow = capture pendant l'horloge basse
#
# chronogram/chronogui/LeftPanel.java
#
SignalName = Signal Nom
SignalValue = Valeur
#
# chronogram/chronogui/PopupMenu.java
#
BusExpand = Exploser
BusFormat = Format
#
# generic/AttributeSetTableModel.java
#
attributeChangeInvalidError = Attribut non changé parce que la requête n'est pas valide
FPGA_Supported = FPGA supporté :
#
# generic/AttrTable.java
#
attributeChangeInvalidTitle = Valeur non valide
attributeDialogTitle = Sélectionner une valeur
#
# generic/ZoomControl.java
#
zoomShowGrid = Changer l'affichage de la grille
# ==> zoomAuto =
#
# hex/Clip.java
#
hexPasteErrorTitle = Erreur de collage
hexPasteSupportedError = Le contenu du presse-papiers ne peut pas être collé dans l'éditeur.
hexPasteTooSmall = Le presse-papiers (%d mots) est trop petit pour remplir\nla région sélectionnée (%d mots). Coller quand même ?
#
# hex/HexFile.java
#
confirmOverwriteMessage = Le fichier existe déjà. Voulez-vous l'écraser ?
confirmOverwriteTitle = Confirmer l'écrasement
hexFileOpenError = Impossible d'ouvrir le fichier.
hexFileWriteError = Erreur pendant l'écriture du fichier.
hexFormatTitle = Format de fichier Hex
ramLoadDialogTitle = Charger l'image mémoire
ramLoadErrorTitle = Erreur de chargement de l'image mémoire
ramSaveDialogTitle = Enregistrer l'image mémoire
ramSaveErrorTitle = Erreur de sauvegarde d'image mémoire
#
# hex/HexFrame.java
#
closeButton = Fermer la fenêtre
hexFrameMenuItem = Editeur Hexadécimal
hexFrameTitle = éditeur Hexadécimal
openButton = Ouvrir...
saveButton = Enregistrer...
#
# log/FilePanel.java
#
fileAppendOption = Ajouter
fileCancelOption = Annuler
fileCannotWriteMessage = Vous n'avez pas les autorisations pour écrire dans "%s."
fileCannotWriteTitle = Fichier non disponible
fileDisableButton = Désactiver
fileDisabled = Fichier de sortie désactivé.
fileEnableButton = Activer
fileEnabled = Fichier de sortie activé.
fileExistsMessage = Le fichier "%s" existe déjà.
fileExistsTitle = Le fichier existe déjà
fileHeaderCheck = Inclure la ligne d'en-tête
fileHelp = Configurer le fichier de sortie.
fileLabel = Fichier :
fileOverwriteOption = Ecraser
fileSelectButton = Sélectionner...
fileTab = Fichier
#
# log/LogFrame.java
#
logFrameMenuItem = %s : Log
logFrameTitle = Log %s de %s
addRemoveSignals = Ajouter ou supprimer des signaux
#
# log/SelectionPanel.java
#
selectionTab = Sélection
selectionHelp = Sélectionner les composants dont il faut loger les valeurs.
selectionDesc = Faites glisser les signaux pour les sélectionner ou les réorganiser.
exploreLabel = Signaux disponibles dans le circuit :
listLabel = Signaux à visualiser :
timeSelectionClock = Sélectionnez votre horloge :
timeSelectionEnable = Autoriser la sélection du temps
timeSelectionFrequency = Fréquence :
#
# log/TablePanel.java
#
tableHelp = Afficher le log des valeurs récentes.
tableTab = Table
#
# log/ValueTable.java
#
tableEmptyMessage = La sélection est vide.
tableHeaderHelp = Radix :
#
# main/AttrTableCircuitModel.java
#
cannotModifyCircuitError = Ce circuit ne peut pas être modifié.
changeCircuitAttrAction = Changer le Circuit
circuitAttrTitle = Circuit : %s
#
# main/AttrTableComponentModel.java
#
changeAttributeAction = Changer un attribut
#
# main/AttrTableSelectionModel.java
#
hdlAttrTitle = Entité VHDL : %s
selectionAttributeAction = Changer l'attribut sélectionné
selectionMultiple = %s × %s
selectionVarious = Différents éléments × %s
#
# main/Canvas.java
#
canvasExceptionError = Simulation stoppée par une erreur interne
canvasOscillationError = Oscillation apparente
canvasWidthError = Largeurs incompatibles
#
# main/ExportImage.java
#
couldNotCreateFile = Le fichier n'a pas pu être créé.
exportEmptyCircuitsMessage = Aucun circuit non vide disponible pour l'exportation.
exportEmptyCircuitsTitle = Exportation impossible
exportGifFilter = Fichiers GIF (*.gif)
exportImageDirectorySelect = Selectionner le répertoire d'exportation
exportImageProgress = Génération de l'image...
exportImageSelect = Exporter l'image
exportJpgFilter = Fichiers JPEG (*.jpeg, *.jpg)
exportNewDirectoryErrorMessage = Le repertoire n'a pas pu être créé.
exportNewDirectoryErrorTitle = Impossible de créer le répertoire
exportPngFilter = Fichiers PNG (*.png)
exportSvgFilter = Fichiers SVG (*.svg)
exportTikZFilter = Fichiers TikZpicture (*.tex)
labelCircuits = Circuits :
labelImageFormat = Format de l'image :
labelPrinterView = Vue de l'impression :
labelScale = Echelle :
#
# main/Frame.java
#
cancelOption = Annuler
confirmCloseTitle = Confirmer fermeture
confirmDiscardMessage = Modifications non sauvegardées pour %s ?
designTab = Conception
discardOption = Ignorer les modifications
propertiesTab = Propriétés
saveOption = Enregistrer
simulateTab = Simulation
stateTab = État
titleCircFileKnown = %s de %s
titleFileKnown = %s
#
# main/Print.java
#
labelHeader = En-tête :
labelRotateToFit = Tourner pour adapter :
printEmptyCircuitsMessage = Aucun circuit non-vide n'est disponible pour l'impression.
printEmptyCircuitsTitle = Impossible d'imprimer
printParmsTitle = Paramètres d'impression
#
# main/SelectionActions.java
#
circularError = Erreur circulaire
dropComponentAction = Supprimer le composant
dropComponentsAction = Supprimer les composants
moveSelectionAction = Déplacer la sélection
pasteCloneCancel = Annuler
pasteCloneIgnore = Ignorer
pasteCloneQuery = Le presse-papiers inclut "%s." Le projet ne l'inclut pas, mais en contient un du même nom.
pasteCloneReplace = Remplacer
pasteCloneTitle = Composant
pasteDropMessage = Des composants du presse-papiers n'ont pas été collés parce que la librairie du projet ne les supporte pas :
pasteDropTitle = Composants non collés
#
# main/SimulationToolbarModel.java
#
simulateDisableTicksTip = Désactiver le tic d'horloge
simulateEnableTicksTip = Activer le tic d'horloge
simulateRunTip = Lancer le simulateur en continu
simulateStepTip = Effectuer un pas dans la propagation des signaux du les circuits
simulateStopTip = Arrêter le simulateur
simulateTickFullTip = Tic un cycle complet
simulateTickHalfTip = Tic un demi cycle
#
# main/StatisticsDialog.java
#
statsCloseButton = Fermer
statsComponentColumn = Composant
statsDialogTitle = Logisim-evolution : %s statistiques
statsLibraryColumn = Librairie
statsRecursiveCountColumn = Recursif
statsSimpleCountColumn = Simple
statsUniqueCountColumn = Unique
#
# main/TickCounter.java
#
tickRateHz = %s Hz
tickRateKHz = %s kHz
#
# main/ToolAttributeAction.java
#
changeToolAttrAction = Outil de changement d'attribut
#
# main/ToolboxToolbarModel.java
#
projectAddCircuitTip = Ajouter un circuit
projectEditAppearanceTip = Éditer le dessin du sous-circuit du circuit affiché
projectMoveCircuitDownTip = Descendre dans la liste le circuit affiché
projectMoveCircuitUpTip = Remonter dans la liste le circuit affiché
projectRemoveCircuitTip = Supprimer le circuit affiché
#
# menu/EditPopup.java
#
editAddControlItem = Ajouter un sommet
editClearItem = Supprimer
editCopyItem = Copier
editCutItem = Couper
editDuplicateItem = Dupliquer
editLowerBottomItem = Abaisser à l'arrière plan
editLowerItem = Abaisser la sélection
editRaiseItem = Élever la sélection
editRaiseTopItem = Élever au premier plan
editRemoveControlItem = Supprimer un sommet
#
# menu/MenuEdit.java
#
editCantRedoItem = Impossible de rétablir
editCantUndoItem = Impossible d'annuler
editMenu = Éditer
editPasteItem = Coller
editRedoItem = Rétablir %s
editSelectAllItem = Tout sélectionner
editUndoItem = Annuler %s
#
# menu/MenuFile.java
#
fileCloseItem = Fermer
fileExportImageItem = Exporter une image...
fileMenu = Fichier
fileMergeItem = Fusionner...
fileNewItem = Nouveau
fileOpenItem = Ouvrir...
filePreferencesItem = Préférences...
filePrintItem = Imprimer...
fileQuitItem = Sortir
fileSaveAsItem = Enregistrer sous...
fileSaveItem = Enregistrer
#
# menu/MenuHelp.java
#
helpAboutItem = À propos...
helpDisplayError = Impossible d'afficher la rubrique d'aide.
helpGuideItem = Guide utilisateur
helpLibraryItem = Librairie de référence
helpMenu = Aide
helpNotFoundError = Rubrique d'aide non trouvée.
helpsetUrl = doc/doc_fr.hs
helpTutorialItem = Tutoriel
helpUnavailableError = Impossible de charger les rubriques d'aide.
helpWindowTitle = Documentation Logisim-evolution
# ==> helpProjectWebsite =
#
# menu/MenuProject.java
#
projectImportVhdlItem = Importer une entité VHDL...
projectMenu = Projet
projectMoveCircuitDownItem = Descendre le circuit
projectMoveCircuitUpItem = Monter le circuit
projectOptionsItem = Options...
projectRevertAppearanceItem = Revenir à l'apparence par défaut
projectUnloadLibrariesItem = Enlever les librairies...
#
# menu/MenuSimulate.java
#
simulateDownStateMenu = Aller dans la vue
simulateGenVhdlFilesItem = Redémarrer la simulation VHDL
simulateLogItem = Chronogramme...
simulateMenu = Simulation
simulateRunItem = Simulation activée
simulateResetItem = Redémarrer la simulation
simulateStepItem = Simulation pas-à-pas
simulateTestItem = Vecteur de test...
simulateTickFreqItem = %s Hz
simulateTickHalfItem = Tic demi-cycle
simulateTickFullItem = Tic cycle complet
simulateTickItem = Tics activés
simulateTickFreqMenu = Fréquence des tics
simulateTickKFreqItem = %s kHz
simulateUpStateMenu = Sortir de la vue
simulateVhdlEnableItem = Simulation VHDL activée
#
# menu/OpenRecent.java
#
fileOpenRecentItem = Ouvrir récent
fileOpenRecentNoChoices = (Rien)
#
# menu/Popups.java
#
circuitMenu = Circuit
libMenu = Librairie
projectAddCircuitItem = Ajouter un circuit...
projectAddVhdlItem = Ajouter une entité VHDL...
projectAnalyzeCircuitItem = Analyser le circuit
projectEditCircuitAppearanceItem = Modifier l'apparence du circuit
projectEditCircuitLayoutItem = Modifier le dessin du circuit
projectToggleCircuitAppearanceItem = Basculer entre les vues Layout et Appearance
projectEditVhdlItem = Modifier le code VHDL
projectGetCircuitStatisticsItem = Statistiques du circuit
projectLoadBuiltinItem = Librairie interne...
projectLoadJarItem = Librairie JAR...
projectLoadLibraryItem = Charger une librairie
projectLoadLogisimItem = Librairie logisim-evolution...
projectReloadLibraryItem = Recharger une librairie
projectRemoveCircuitItem = Supprimer le circuit
projectRemoveVhdlItem = Supprimer l'entité VHDL
projectSetAsMainItem = Définir comme circuit principal
projectUnloadLibraryItem = Enlever la librairie
projMenu = Projet
vhdlMenu = Entité VHDL
#
# menu/PrintHandler.java
#
couldNotCreateImage = L'image ne peut pas être créée.
exportImageButton = Exportation
exportImageFileSelect = Sélectionner le fichier d'exportation
printError = Erreur durant l'impression : %s
printErrorTitle = Erreur durant l'impression
#
# menu/ProjectCircuitActions.java
#
analyzeErrorTitle = Impossible d'analyser
analyzeNoExpressionTitle = Expression non déterminée
analyzeTooManyInputsError = L'analyse ne supporte pas plus de %s entrées.
analyzeTooManyOutputsError = L'analyse ne supporte pas plus de %s sorties.
circuitCreateTitle = Ajout de circuit
circuitNameDialogTitle = Nom du circuit
circuitNameExists = Ce nom est déjà dans utilisé dans votre projet et ne peut pas donc être utilisé.
circuitNameInvalidName = Ce nom est invalide (il doit respecter la règle ([a-zA-Z]+\\w*))
circuitNameKeyword = Ce nom est un mot-clé et ne peut pas donc être utilisé.
circuitNameMissingError = Un circuit a besoin d'un nom.
circuitNamePrompt = Nom du circuit :
circuitRemoveErrorTitle = Impossible de supprimer le circuit
circuitRemoveLastError = La librairie doit contenir au moins un circuit.
circuitRemoveUsedError = Les circuits contenus dans d'autres circuits ne peuvent pas être supprimés.
vhdlNameDialogTitle = Nom d'entité VHDL en entrée
vhdlNamePrompt = Nom de l'entité VHDL :
#
# menu/ProjectLibraryActions.java
#
jarClassNamePrompt = Nom de la classe :
jarClassNameTitle = Entrer une classe JAR
loadBuiltinDialogTitle = Charger la librairie de base
loadBuiltinErrorTitle = Impossible de charger la librairie de base
loadBuiltinNoneError = Toutes les librairies de base sont déjà chargées.
loadJarDialogTitle = Charger un fichier JAR
loadLogisimDialogTitle = Charger un fichier Logisim
unloadErrorTitle = Impossible de supprimer la librairie
unloadLibrariesDialogTitle = Sélectionner les librairies à libérer.
unloadNoneError = Toutes les librairies ouvertes sont utilisées.
#
# opts/MouseOptions.java
#
mouseHelp = Éditer les outils associés avec le click de souris.
mouseMapNone = Aucun outil sélectionné
mouseMapText = Click avec une combinaison
mouseMapText2 = Défini comme %s
mouseRemoveButton = Supprimer
mouseTitle = Pointeur
#
# opts/OptionsActions.java
#
addMouseMappingAction = Ajouter une définition du pointeur
removeMouseMappingAction = Supprimer une définition du pointeur
setOptionAction = Définir %s
#
# opts/OptionsFrame.java
#
optionsFrameMenuItem = %s : Options
optionsFrameTitle = Logisim : %s Options
revertButton = Réinitialiser selon modèle
revertHelp = Réinitialiser les paramètres du projet aux valeurs par défaut du modèle.
revertTitle = Réinitialiser
#
# opts/SimulateOptions.java
#
gateUndefined = Sortie des portes quand indéfinie
MemoriesStartupUnknown = Les mémoires sont initialisées aléatoirement (plutôt que remplies de zéros)
simulateHelp = Configurer le moteur pour simuler le comportement d'un circuit.
simulateLimit = Itérations jusqu'à oscillation
simulateRandomness = Ajouter du bruit aux délais des composants
simulateTitle = Simulation
#
# opts/ToolbarActions.java
#
toolbarAddAction = Ajouter un bouton d'outils
toolbarInsertSepAction = Insérer un séparateur
toolbarMoveAction = Déplacer un bouton d'outils
toolbarRemoveAction = Supprimer un buton d'outils
toolbarRemoveSepAction = Supprimer un séparateur
#
# opts/ToolbarOptions.java
#
toolbarAddSeparator = Ajouter un séparateur
toolbarAddTool = Ajouter un outil
toolbarHelp = Éditer les outils de la barre d'outils.
toolbarMoveDown = Descendre
toolbarMoveUp = Monter
toolbarRemove = Supprimer
toolbarTitle = Barre d'outils
#
# PrefMonitorBooleanConvert.java
#
OptionConvertAll = Conversion de l'apparence actuelle des broches et des sondes
OptionConvertAllPinsProbes = Convertir toutes les broches et les sondes du projet pour qu'elles utilisent l'apparence "%s" ?
OptionNo = Non, conserver
OptionYes = Oui, convertir
#
# prefs/ExperimentalOptions.java
#
accelD3D = Direct3D
accelDefault = Valeurs par défaut
accelLabel = Accélération graphique :
accelNone = Rien
accelOpenGL = OpenGL
accelRestartLabel = Redémarrer Logisim pour activer les changements.
experimentHelp = Activer les options qui n'ont pas encore été bien testées
experimentTitle = Expérimental
#
# prefs/IntlOptions.java
#
intlGateShape = Forme des portes logiques :
intlHelp = Éditer les préférences de localisation
intlLocale = Langue :
intlReplaceAccents = Remplacer les caractères accentués
intlTitle = International
shapeDIN40700 = DIN 40700
shapeRectangular = IEC
shapeShaped = ANSI
#
# prefs/LayoutOptions.java
#
layoutAddAfter = Après l'ajout d'un composant :
layoutAddAfterEdit = Basculer vers l'outil d'édition
layoutAddAfterUnchanged = Conserver l'outil du composant
layoutAddShowGhosts = Afficher le fantôme pendant l'ajout
layoutAntiAliasing = Utiliser l'anticrénelage
layoutAttributeHalo = Montrer l'ombre de l'attribut
layoutDefaultApearance = Apparence par défaut :
layoutHelp = Configurer le comportement de la présentation de l'éditeur
layoutMoveKeepConnect = Conserver les connections lors du déplacement
layoutNamedCircuitBoxesFixedSize = Utiliser des boîtes de circuit de taille fixe
layoutPrinterView = Vue d'impression
layoutRadix1 = Première base quand le câble est poussé :
layoutRadix2 = Deuxième base quand le câble est poussé :
layoutShowTips = Montrer les astuces du composant
layoutTitle = présentation
layoutUseNewInputOutputSymbols = Utiliser les nouveaux symboles d'entrée et de sortie
layoutPinAppearance = Dessinez les broches de connexion comme :
layoutPinAppearanceDotSmall = Petit point
layoutPinAppearanceDotMedium = Point moyen
layoutPinAppearanceDotBig = Grand point
layoutPinAppearanceDotBigger = Très grand point
#
# prefs/PreferencesFrame.java
#
preferencesFrameMenuItem = Préférences
preferencesFrameTitle = Logisim : Préférences
#
# prefs/SimOptions.java
#
simBusColTitle = Couleur du bus :
simColorBlindColors = Couleurs malvoyants
simDefaultColors = Couleurs par défaut
simDontCareCharTitle = Caratère de la valeur "Indiférent" :
simErrorCharTitle = Caractère représentant "Erreur" :
simErrorColTitle = Couleur pour la valeur "Erreur" :
simFalseCharTitle = Caractère représentant "Faux" :
simFalseColTitle = Couleur pour la valeur "Faux"  :
simHelp = Modifier les couleurs et les symboles de simulation utilisés
simKmapColors = Couleur de la carte %d :
simKmapColorsTitle = Couleurs du diagramme de Karnaugh :
simNilColTitle = Couleur pour etat  non connectée :
simStrokeColTitle = Couleur du trait du fil/bus :
simTitle = Simulation
simTrueCharTitle = Caractère représentant "Vrai ":
simTrueColTitle = Couleur pour représentant "Vrai" :
simUnknownCharTitle = Caractère pour la valeur "inconnue" :
simUnknownColTitle = Couleur pour la valeur "Inconnue" :
simWidthErrorBackgroundTitle = Couleur de fond de "Erreur de largeur" :
simWidthErrorCaptionTitle = Couleur de la légende de  Erreur de largeur" :
simWidthErrorHighlightTitle = Couleur de surbrillance de "Erreur de largeur" :
simWidthErrorTitle = Couleur "Erreur de largeur" :
#
# prefs/TemplateOptions.java
#
selectDialogButton = Sélectionner
selectDialogTitle = Sélectionner un modèle
templateCustomOption = Modèle spécifique :
templateEmptyOption = Modèle vide
templateErrorMessage = Impossible de charger le modèle : %s
templateErrorTitle = Erreur dans le chargement d'un modèle
templateHelp = Sélectionner le modèle courant
templatePlainOption = Modèle par défaut complet
templateSelectButton = Sélectionner...
templateTitle = Modèle
#
# prefs/WindowOptions.java
#
windowHelp = Configurer la fenêtre d'édition principale
windowTickRate = Afficher la fréquence des tics
windowTitle = Fenêtre
windowToolbarHidden = Caché
windowToolbarImportant = Important : changer les valeurs ci-dessous peut avoir des résultats\nimprévisibles!
windowToolbarLocation = Position de la barre d'outils :
windowToolbarLookandfeel = Apparence :
windowToolbarPleaserestart = Redémarer logisim.
windowToolbarPreview = Prévisualisation
windowToolbarReset = Réinitialiser la disposition de la fenêtre aux paramètres par défaut de logisims
windowToolbarZoomfactor = Facteur de zoom
windowCanvasBgColor = Couleur de fond sans grille :
windowGridBgColor = Couleur de fond si grille :
windowGridDotColor = Couleur des points d'unitée :
windowGridZoomedDotColor = Couleur des points de sous unitée :
windowGridColorsReset = Réinitialiser les couleurs de la grille aux valeurs par défaut de Logisim
#
# start/AboutCredits.java
#
creditsRoleFork = Fork du projet originel
creditsRoleOriginal = Original Version
#
# start/SplashScreen.java
#
progressFileCreate = Création fichier...
progressFileLoad = Chargement fichier...
progressFrameCreate = Création fenètre...
progressGuiInitialize = Initialisation interface...
progressLibraries = Chargement composants...
progressProjectCreate = Création project...
progressTemplateClose = Femer modèle...
progressTemplateCreate = Création modèle...
progressTemplateLoad = Chargement modèle...
progressTemplateOpen = Ouvrir modèle...
startupCloseButton = Fermer
startupQuitButton = Quitter
#
# start/Startup.java
#
argAccentsOption = -accents yes|no   	utiliser les caractères accentués ou le code ASCII équivalent
argAccentsOptionError = L'argument pour l'option -accents doit être "yes" ou "no".
argAnalyzeOption = -analyze          activer l'option d'analyse
argCircuitOption = -circuit name     teste le circuit donné à la place du circuit principal, utilisé avec "-tty table"
argClearOption = -clearprops       	effacer les préférences au démarrage
argDuplicateSubstitutionError = Le même fichier ne peut pas être substitué plusieurs fois.
argEmptyOption = -empty            	utiliser un modèle vide
argGatesOption = -gates shaped|rectangular   utiliser le style de porte logique
argGatesOptionError = L'argument pour l'option -gate doit être "shaped" ou "rectangular".
argGeometryError = L'argument pour -geom doit être "WxH" ou "WxH+X+Y"
argGeometryOption = -geom WxH [+X+Y] définit la géométrie de la fenêtre principale
argHelpOption = -help             	afficher cet aide et terminer
argLoadOption = -load fichier        	charger le fichier image dans la RAM (fonctionne uniquement avec -tty)
argLocaleOption = -locale str       	utiliser la locale spécifiée
argNoSplashOption = -nosplash         	cacher le splash au démarrage
argOneTemplateError = Un seul modèle autorisé.
argOptionHeader = options :
argPlainOption = -plain            	utiliser le modèle logisim standard
argQuestaOption = -questa yes|no      use Questa Advanced Simulator to validate HDL entities
argQuestaOptionError = L'argument pour l'option -questa doit être "yes" ou "no".
argSubOption = -sub fichier1 fichier2  charger le fichier en remplaçant la librairie fichier 1 par fichier 2
argTemplateOption = -template fichier   utiliser fichier comme modèle
argTestCircGen = -test-circ-gen <circ_input> <circ_output> ouvre le fichier circ et le réécrit pour vérifier le contenu XML
argTestCircuit = -test-circuit <path_to_circ> ouvre un fichier circ et démarre les vecteurs de tests. Renvoie Succès ou Échec
argTestImplement = -test-fpga-implementation  <circ_input> [map_input] <circuit_name> <board> [tick frequency] [HDLONLY] : Teste l'implémentation à l'aide du fichier circ et optionnellement du fichier de mappage map_input (obsolète depuis la v3.3.3). L'implémentation circuit_name est le circuit choisi pour implémenter (FPGA_Top) et la plaque est celle située dans resources/logisim/boards/ sans l'extension XML. La fréquence de tics optionnelle est en Hz. Le drapeau optionnel HDLONLY permet de seulement générer la description HDL sans faire de synthèse, de placement-routage et de téléversement.
argTestOption = -test nom fichier   rexécuter le vecteur test à partir d'un fichier sur le circuit nommé, puis quitter
argTtyOption = -tty format       		exécuter sans interface graphique
argTwoSubstitutionError = L'option "-sub" doit être suivir de deux paramètres.
argUsage = usage : java %s [options] [filenames]
argVersionOption = -version          	afficher la version et terminer
invalidLocaleError = La langue sélectionnée n'est pas supportée.
invalidLocaleOptionsHeader = Langues supportées:
loadMultipleError = L'option "-load" ne peut être spécifiée qu'une seule fois.
loadNeedsFileError = l'utilisation de "-load" exige un fichier sur la ligne de commande.
loadNeedsTtyError = L'option "-load" fonctionne uniquement avec "-tty".
templateCannotReadError = Pas la permission de lire le fichier modèle %s.
templateMissingError = Le fichier modèle %s n'existe pas.
ttyFormatError = -tty requière au moins l'une des options : halt, speed, stats, table, tty
ttyNeedsFileError = L'utilisation de "-tty" requière un nom de fichier sur la ligne de commande.
#
# start/TtyInterface.java
#
loadIoError = Erreur pendant la lecture du fichier image
loadNoRamError = Pas de RAM trouvée pour l'option "-load".
statsTotalWith = TOTAL (avec les sous-circuits)
statsTotalWithout = TOTAL (sans les objets des sous-circuits)
ttyHaltReasonOscillation = arrêté à cause de la détaction d'une oscillation
ttyHaltReasonPin = arrêté à cause du pin halt
ttyLoadError = Erreur dans le chargement du fichier circuit : %s
ttyNoTtyError = Pas de TTY ou clavier n'a été trouvé.
ttySpeedMsg = %s Hz (%s tics dans %s millisecondes)
#
# test/TestFrame.java
#
failMessage = Erreur : %s
fileCannotParseMessage = Le vecteur dans "%s" n'a pas pu être lu.\n Détails : %s.
fileCannotReadMessage = Vous n'avez pas la permission pour lire :"%s."
fileCannotReadTitle = Fichier non disponible
fileWrongPinsMessage = Le vecteur dans "%s" ne correspond pas au circuit.\n Détails : %s.
fileWrongPinsTitle = Erreur de chargement du vecteur de test
loadButton = Charger vecteurs
passMessage = Réussite : %s
resetButton = Réinitialiser
runButton = Lancer
stopButton = Stop
testFrameMenuItem = %s : Vecteur de test
testFrameTitle = Logisim : Vecteur de test %s de %s
#
# test/TestPanel.java
#
expectedValueMessage = Attendu %s
failStatus = Err.
passStatus = Ok.
statusHeader = Statut
#
# test/TestThread.java
#
testFailed = Erreur dans vecteur de test %s:
testLoadingFailed = Erreur de chargement vecteur de test : %s
testLoadingVector = chargement veteur test "%s" ...
testResults = Réussit : %s, Erreur : %s
testRunning = Execution %s vecteurs ...
testSetupFailed = Erreur préparation du vecteur de test : %s
untitled = Sans titre
