#
# Analyze.java
#
defaultInputLabels = a,b,c,d,e,f,g,h
defaultOutputLabels = x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
analyzeCannotHandleError = Erstelle eine Wahrheitstabelle für den Ausdruck, aufgrund von %s.
analyzeCircularError = Zirkelbezug entdeckt; erstelle stattdessen eine Wahrheitstabelle.
analyzeConflictError = Konflikt mit den Ausgängen entdeckt; erstelle stattdessen eine Wahrheitstabelle.
#
# appear/AppearanceAnchor.java
#
appearanceFacingAttr = Symbolausrichtung
circuitAnchor = Anker
#
# appear/AppearancePort.java
#
circuitPort = Port
#
# appear/DynamicElement.java
#
circuitLabelBottom = Unten
circuitLabelCenter = Zentriert
circuitLabelLeft = Links
circuitLabelNone = Kein Label
circuitLabelRight = Rechts
circuitLabelTop = Oben
circuitShowLabelAttr = Label Position
#
# Circuit.java
#
changeComponentAttributesAction = Aktion, die ein Komponentenattribut ändert
ComponentLabelCollisionError = Eine Komponente in der Schaltung, hat das gleiche Label wie der Name der neu platzierten Komponente. Dieses Label wurde entfernt!
ComponentLabelEqualCircuitName = Das angegebene Label ist gleich dem Schaltungsnamen, dies ist nicht zulässig. Bitte geben Sie einen anderen Namen an.
ComponentLabelNameError = Das Label entspricht einem im Schaltkreis verwendeten Komponentennamen!\n Bitte verwenden Sie Label, die nicht mit den Bauteilnamen übereinstimmen.
UsedLabelNameError = Es gibt bereits eine Komponente mit diesem Label!\n Bitte verwenden Sie eindeutige Labels in einem Schaltkreis.
#
# CircuitAttributes.java
#
circuitAppearanceAttr = Aussehen
circuitCustomAppearance = Benutzerdefiniert
circuitIsVhdl = Verweis auf die VHDL-Architektur?
circuitLabelAttr = Gemeinsame Beschriftung
circuitLabelDirAttr = Ausrichtung der Beschriftung
circuitLabelFontAttr = Zeichensatz der gemeinsamen Beschriftung
circuitLabelLocAttr = Beschriftungs Position
circuitName = Schaltungsname
circuitNamedBoxFixedSize = Feste Boxgröße
CircuitSameInputOutputLabel = Der Name des Schaltkreises entspricht dem Label eines Eingangs oder eines Ausgangs. Bitte geben Sie einen anderen Schaltungsnamen an.
circuitVhdlPath = VHDL-Architektur Dateipfad
EmptyNameError = Jeder Schaltkreis benötigt einen Namen, leeren Namen sind unzulässig. Bitte geben Sie einen nicht leeren Schaltkreisnamen an.
#
# CircuitMutation.java
#
unknownChangeAction = Schaltung ändern
#
# RadixOption.java
#
radix10Signed = Dezimal mit Vorzeichen
radix10Unsigned = Dezimal ohne Vorzeichen
radix16 = Hexadezimal
radix2 = Binär
radix8 = Oktal
radixAttr = Basis
#
# Splitter.java
#
splitterCombinedTip = Gemeinsame Seite des Verteilers
splitterSplit0Tip = Keine Bits von der gemeinsamen Seite
splitterSplit1Tip = Bit %s der gemeinsamen Seite
splitterSplitManyTip = Bits %s der gemeinsamen Seite
#
# SplitterAttributes.java
#
splitterAppearanceAttr = Auftreten
splitterAppearanceCenter = Mittig
splitterAppearanceLeft = Links
splitterAppearanceLegacy = Legacy
splitterAppearanceRight = Rechts
splitterBitAttr = Bit %s
splitterBitNone = Keine
splitterBitWidthAttr = Bitbreite
splitterFanOutAttr = Ausfächerung
splitterSpacing = Abstand
#
# SplitterDistributeItem.java
#
splitterDistributeAscending = Aufsteigend verteilen
splitterDistributeDescending = Absteigend verteilen
#
# SplitterFactory.java
#
splitterComponent = Verteiler
#
# SubcircuitFactory.java
#
subcircuitViewItem = %s ansehen
#
# Wire.java
#
wireDirectionAttr = Richtung
wireDirectionHorzOption = Horizontal
wireDirectionVertOption = Vertikal
wireLengthAttr = Länge
#
# WireFactory.java
#
wireComponent = Leitung


