#
# Analyze.java
#
defaultInputLabels = a,b,c,d,e,f,g,h
defaultOutputLabels = x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
analyzeCannotHandleError = 由于%s，正在计算真值表而不是表达式。
analyzeCircularError = 检测到循环引用；改为计算真值表。
analyzeConflictError = 检测到冲突的输出；改为计算真值表。
#
# appear/AppearanceAnchor.java
#
appearanceFacingAttr = 外观
circuitAnchor = 电路节点
#
# appear/AppearancePort.java
#
circuitPort = 端口
singleStepMessage = 模拟器暂停：%s 信号已更改，%s 输入已更改
#
# appear/DynamicElement.java
#
circuitLabelBottom = 底部
circuitLabelCenter = 居中
circuitLabelLeft = 左侧
circuitLabelNone = 无标签
circuitLabelRight = 右侧
circuitLabelTop = 顶部
circuitShowLabelAttr = 标签位置
#
# Circuit.java
#
changeComponentAttributesAction = 更改组件属性的操作
ComponentLabelCollisionError = 回路中的一个元件具有与新放置元件的元件名称相同的标签。此标签已被移除！
ComponentLabelEqualCircuitName = 指定的标签等于电路名称，这是不允许的。请指定其他名称。
ComponentLabelNameError = 标签对应于电路中使用的元件名称！\n请使用不等于元件名称的标签。
UsedLabelNameError = 已存在具有此标签的元件！\n请在电路中使用唯一标签。
#
# CircuitAttributes.java
#
circuitAppearanceAttr = 外观
circuitCustomAppearance = 自定义
circuitIsVhdl = 参考 VHDL 体系结构？
circuitLabelAttr = 共享标签
circuitLabelDirAttr = 共享标签朝向
circuitLabelFontAttr = 共享标签字体
circuitLabelLocAttr = 标签位置
circuitName = 线路名称
circuitNamedBoxFixedSize = 使用固定方框大小
CircuitSameInputOutputLabel = 电路名称等于输入或输出的标签。请指定另一个电路名称。
EmptyNameError = 每条线路都需要一个名称，不允许为空。请指定非空的电路名称。
#
# CircuitMutation.java
#
unknownChangeAction = 更改线路
#
# RadixOption.java
#
radix10Signed = 带符号十进制
radix10Unsigned = 无符号十进制
radix16 = 十六进制
radix2 = 二进制
radix8 = 八进制
radixFloat = 浮点数
radixAttr = 基数
#
# Splitter.java
#
splitterCombinedTip = 分线器的合并端
splitterSplit0Tip = 没有来自合并端的位
splitterSplit1Tip = 来自合并端的第 %s 位
splitterSplitManyTip = 来自合并端的 %s 位
#
# SplitterAttributes.java
#
splitterAppearanceAttr = 外观
splitterAppearanceCenter = 居中
splitterAppearanceLeft = 左
splitterAppearanceLegacy = 传统
splitterAppearanceRight = 右
splitterBitAttr = 第 %s 位
splitterBitNone = 无
splitterBitWidthAttr = 输入位宽
splitterFanOutAttr = 支路
splitterSpacing = 间距
#
# SplitterDistributeItem.java
#
splitterDistributeAscending = 按升序分布
splitterDistributeDescending = 按降序分布
#
# SplitterFactory.java
#
splitterComponent = 分线器
#
# SubcircuitFactory.java
#
subcircuitViewItem = 视图 %s
#
# Wire.java
#
wireDirectionAttr = 方向
wireDirectionHorzOption = 水平
wireDirectionVertOption = 垂直
wireLengthAttr = 长度
#
# WireFactory.java
#
wireComponent = 线路
