#
# Analyze.java
#
defaultInputLabels = a,b,c,d,e,f,g,h
defaultOutputLabels = x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
analyzeCannotHandleError = Вычисляется таблица истинности для %s вместо выражения.
analyzeCircularError = Обнаружена циклическая ссылка; составляется таблица истинности.
analyzeConflictError = Обнаружены конфликтующие выходы; составляется таблица истинности.
#
# appear/AppearanceAnchor.java
#
appearanceFacingAttr = Направление внешнего вида
circuitAnchor = Якорь
#
# appear/AppearancePort.java
#
circuitPort = Порт
#
# appear/DynamicElement.java
#
circuitLabelBottom = Нижнее
circuitLabelCenter = Центр
circuitLabelLeft = Налево
circuitLabelNone = Нет этикетки
circuitLabelRight = Правильно
circuitLabelTop = Лучший
circuitShowLabelAttr = Положение этикетки
#
# Circuit.java
#
changeComponentAttributesAction = Действие, изменяющее атрибут компонента
ComponentLabelCollisionError = Один из компонентов в цепи имеет такую же этикетку, что и название нового компонента. Эта этикетка была удалена!
ComponentLabelEqualCircuitName = Указанная метка равна имени схемы, это недопустимо. Пожалуйста, укажите другое имя.
ComponentLabelNameError = Этикетка соответствует названию компонента, используемому в цепи!\n Пожалуйста, используйте ярлыки, которые не совпадают с названиями компонентов.
UsedLabelNameError = Уже есть компонент с этой этикеткой!\n Пожалуйста, используйте уникальные этикетки в схеме.
#
# CircuitAttributes.java
#
circuitAppearanceAttr = Внешний вид
circuitCustomAppearance = Пользовательский
circuitIsVhdl = Ссылка на архитектуру VHDL?
circuitLabelAttr = Общая метка
circuitLabelDirAttr = Направление общей метки
circuitLabelFontAttr = Шрифт общей метки
circuitLabelLocAttr = Направление метки
circuitName = Название схемы
circuitNamedBoxFixedSize = фиксированный размер коробки
CircuitSameInputOutputLabel = Имя схемы равно метке входа или выхода. Пожалуйста, укажите другое название схемы.
circuitVhdlPath = Путь к файлу архитектуры VHDL
EmptyNameError = Каждая цепь нуждается в имени, не может позволить пустой. Пожалуйста, укажите непустое имя цепи.
#
# CircuitMutation.java
#
unknownChangeAction = Изменить схему
#
# RadixOption.java
#
radix10Signed = Знаковое десятичное
radix10Unsigned = Беззнаковое десятичное
radix16 = Шестнадцатеричное
radix2 = Двоичное
radix8 = Восьмеричное
radixAttr = Основание
#
# Splitter.java
#
splitterCombinedTip = Объединённый конец разветвителя
splitterSplit0Tip = Нет бит с объединённого конца
splitterSplit1Tip = Бит %s с объединённого конца
splitterSplitManyTip = Биты %s с объединённого конца
#
# SplitterAttributes.java
#
splitterAppearanceAttr = Внешний вид
splitterAppearanceCenter = По центру
splitterAppearanceLeft = Леворукий
splitterAppearanceLegacy = Устаревший
splitterAppearanceRight = Праворукий
splitterBitAttr = Бит %s
splitterBitNone = Нет
splitterBitWidthAttr = Разрядность входа
splitterFanOutAttr = Веерный выход
splitterSpacing = Расстояние
#
# SplitterDistributeItem.java
#
splitterDistributeAscending = Расставить по возрастанию
splitterDistributeDescending = Расставить по убыванию
#
# SplitterFactory.java
#
splitterComponent = Разветвитель
#
# SubcircuitFactory.java
#
subcircuitViewItem = Рассмотреть %s
#
# Wire.java
#
wireDirectionAttr = Направление
wireDirectionHorzOption = Горизонтальный
wireDirectionVertOption = Вертикальный
wireLengthAttr = Длина
#
# WireFactory.java
#
wireComponent = Провод


