#
# Reviewed MOR: 2021-07-05 (WiP)
#
#
# Analyze.java
#
defaultInputLabels = a,b,c,d,e,f,g,h
defaultOutputLabels = x,y,z,u,v,w,s,t
#
# AnalyzeException.java
#
analyzeCannotHandleError = Wyliczanie tabeli prawdy zamiast wyrażenia z powodu %s.
analyzeCircularError = Wykryto zapętlone odwołanie. Obliczam tablicę prawdy zamiast tego.
analyzeConflictError = Wykryto sprzeczne wyjścia. Obliczam tablicę prawdy zamiast tego.
#
# appear/AppearanceAnchor.java
#
# appearanceFacingAttr = Appearance Facing
#appearanceFacingAttr = Skierowanie
# circuitAnchor = Anchor
#circuitAnchor = oś
#
# appear/AppearancePort.java
#
circuitPort = Port
singleStepMessage = Symulacja wstrzymana: %s sygnałów się zmieniło, %s wejść się zmieniło
#
# appear/DynamicElement.java
#
circuitLabelBottom = Dół
circuitLabelCenter = Środek
circuitLabelLeft = Lewo
circuitLabelNone = Brak etykiety
circuitLabelRight = Prawo
circuitLabelTop = Góra
circuitShowLabelAttr = Pozycja etykiety
#
# Circuit.java
#
changeComponentAttributesAction = Akcja zmieniająca atrybut komponentu
ComponentLabelCollisionError = Jeden komponent w obwodzie ma taką samą etykietę jak nazwa nowo umieszczonego elementu. Ta etykieta została usunięta!
ComponentLabelEqualCircuitName = Podana etykieta jest taka sama jak nazwa obwodu, co nie jest niedozwolone. Podaj inną nazwę.
ComponentLabelNameError = Etykieta odpowiada nazwie komponentu używanego w obwodzie!\nProszę używaaj etykiet, które nie są równe nazwom komponentów.
UsedLabelNameError = Istnieje już komponent z tą etykietą!\nProszę używaj unikalnych etykiet w obwodzie.
#
# CircuitAttributes.java
#
circuitAppearanceAttr = Wygląd
circuitCustomAppearance = Własny
circuitIsVhdl = Odniesienie do architektury VHDL?
# circuitLabelAttr = Shared Label
#circuitLabelAttr = Napis etykiety
# circuitLabelDirAttr = Shared Label Facing
#circuitLabelDirAttr = Skierowanie napisu etykiety
# circuitLabelFontAttr = Shared Label Font
circuitLabelFontAttr = Czcionka etykiety
# circuitLabelLocAttr = Label Location
circuitLabelLocAttr = Lokalizacja etykiety
circuitName = Nazwa obwodu
# circuitNamedBoxFixedSize = Use fixed box-size
#circuitNamedBoxFixedSize = Użyj stałego rozmiaru bloku
CircuitSameInputOutputLabel = Nazwa obwodu pokrywa się z nazwą wejścia lub wyjścia. Proszę użyj innej nazwy.
circuitVhdlPath = Ścieżka pliku architektury VHDL
EmptyNameError = Każdy układ musi mieć nazwę. Proszę podaj niepustą nazwę dla obwodu.
#
# CircuitMutation.java
#
unknownChangeAction = Zamień obwód
#
# RadixOption.java
#
radix10Signed = Dziesiętna ze znakiem
radix10Unsigned = Dziesiętna bez znaku
radix16 = Szesnastkowa
radix2 = Dwójkowa
radix8 = Ósemkowa
radixFloat = Zmiennoprzecinkowa
radixAttr = Podstawa
#
# Splitter.java
#
splitterCombinedTip = Połączony koniec rozdzielacza
splitterSplit0Tip = Brak bitów z połączonego końca
splitterSplit1Tip = Bit %s z połączonego końca
splitterSplitManyTip = Bity %s z połączonego końca
#
# SplitterAttributes.java
#
splitterAppearanceAttr = Wygląd
splitterAppearanceCenter = Wyśrodkowany
# splitterAppearanceLeft = Left-handed
splitterAppearanceLeft = Left-handed
splitterAppearanceLegacy = Klasycznie
# splitterAppearanceRight = Right-handed
splitterAppearanceRight = Prawo-ręczny
splitterBitAttr = Bit %s
# splitterBitNone = None
splitterBitNone = Brak
splitterBitWidthAttr = Liczba bitów wejścia
splitterFanOutAttr = Wyjścia
splitterSpacing = Rozstaw
#
# SplitterDistributeItem.java
#
splitterDistributeAscending = Rozłóż rosnąco
splitterDistributeDescending = Rozłóż malejąco
#
# SplitterFactory.java
#
splitterComponent = Rozdzielacz
#
# SubcircuitFactory.java
#
# subcircuitViewItem = View %s
subcircuitViewItem = Otwórz %s
#
# Wire.java
#
wireDirectionAttr = Kierunek
wireDirectionHorzOption = Poziomo
wireDirectionVertOption = Pionowo
wireLengthAttr = Długość
#
# WireFactory.java
#
wireComponent = Przewód
