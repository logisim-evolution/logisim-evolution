#
# data/CsvInterpretor.java
#
CsvBitNotSpecified = La linea %d del file csv '%s' non contiene bit %d della variabile '%s', interrompendo.
CsvDuplicatedBit = La linea %d del file csv '%s' contiene il doppio del bit %d della variabile '%s', interrompendo.
CsvDuplicatedVar = La linea %d del file csv '%s' contiene più volte la variabile '%s', interrompendo.
CsvIncorrectBitOrder = La linea %d del file csv '%s' contiene una sequenza di bit errata per la variabile '%s', che viene interrotta.
CsvIncorrectEmpty = La riga %d del file csv '%s' contiene un campo vuoto errato in posizione %d, che viene interrotto.
CsvIncorrectLine = La linea %d del file csv '%s' ha delle voci %d invece della %d richiesta, annullando.
CsvIncorrectVarName = La riga %d del file csv '%s' contiene l'etichetta formattata in modo errato '%s', annullando.
CsvInvalidEntry = La riga %d del file csv "%s" contiene una voce non valida "%s" nel campo %d, in caso di interruzione.
# ==> CsvNoEntries = 
CsvNoInputsFound = La linea %d del file csv '%s' non contiene alcun input, annullando.
CsvNoSepFound = La linea %d del file csv '%s' non contiene un campo separatore, interrompendo.
CsvNotEnoughEmpty = La linea %d del file csv '%s' non contiene abbastanza campi vuoti dopo la variabile '%s', interrompendo.
#
# data/ExpressionRenderData.java
#
expressionEmpty = (vuoto)
#
# file/AnalyzerTexWriter.java
#
latexBabelLanguage = inglese
latexEmpty = Analizzatore vuoto
latexEmptyText = Poiché l'analizzatore non aveva variabili di input e/o variabili di output al momento della generazione del documento, non c'è nulla da mostrare.
latexHeader = Logisim-evoluzione generata documento su %s
latexIntroduction = Introduzione
latexIntroductionText = Questo documento è stato generato da logisim-evolution. Qualsiasi parte delle fonti TeX può essere utilizzata nei vostri documenti senza problemi. Nel caso in cui si voglia utilizzare tutte le parti di questa fonte TeX generata, si prega di (1) non dimenticare di includere i pacchetti richiesti, e (2) includere una nota che questa fonte è stata generata dall'evoluzione di logisim-evolution.
latexKarnaugh = Diagrammi di Karnaugh
latexKarnaughEmpty = Diagrammi Karnaugh vuoti
latexKarnaughFilledIn = Riempito in diagrammi Karnaugh
latexKarnaughFilledInGroups = Riempito in diagrammi Karnaugh con coperture
latexKarnaughText = Questa sezione mostra le varie versioni dei diagrammi Karnaugh delle funzioni date.
latexKarnaughToBig = Non è possibile visualizzare i diagrammi Karnaugh con più di %d vars in ingresso.
latexMinimal = Espressioni minime
latexTruthTable = Tavola della verità
latexTruthTableComlete = Tabella della verità completa
latexTruthTableCompact = Tabella di verità compattata
latexTruthTableText = La tabella può essere molto grande per essere visualizzata sulla pagina. Al momento della generazione non è stato fatto alcun calcolo sulla dimensione della tabella rispetto alla larghezza/altezza della pagina.
latexTruthTableToBig = ~La tabella della verita' ha piu' di una serie di voci, non ha senso mostrarlo qui.
tableLatexFilter = Logisim-evolution Documento TeX (*.tex)
#
# file/TruthtableCsvFile.java
#
tableCsvFileFilter = Logisim-evolution Tabella delle verità (*.csv)
#
# file/TruthtableTextFile.java
#
tableParseErrorMessage = Ignorare gli errori e riprovare?
tableParseErrorTitle = Tabella di analisi degli errori di verità
tableRemark1 = # Tavola della verità
tableRemark2 = # Generato dal circuito %s
tableRemark3 = # Esportato su %s
tableRemark4 = # Suggerimenti e note sulla formattazione:\n# * Puoi modificare questo file e poi importarlo nuovamente in Logisim!\n# * Qualsiasi cosa dopo un '#' è un commento e sarà ignorato.\n# * Le linee vuote e le linee di separazione (ad esempio, ~~~~~~~~~~~~) vengono ignorate.\n# * Mantieni semplici i nomi delle colonne (senza spazi, punteggiatura, ecc.)\n# * 'Nome[N..0]' indica una variabile N 1 bit, mentre\n# Il 'Nome' di per sé indica una variabile a 1 bit.\n# * È possibile utilizzare 'x' o '-' per indicare "don't care" per entrambi.\n# bit di ingresso e uscita.\n# * È possibile utilizzare la notazione binaria (ad esempio, '10100011xxxxxxxx') oppure\n# o esagonale (ad esempio, 'C3x'). Logisim capira' chi e' chi e'.
tableTxtFileFilter = Tabella delle verità dell'evoluzione di Logisim-evolution (*.txt)
#
# gui/Analyzer.java
#
analyzePleaseWait = Per favore, aspetta................
analyzerWindowTitle = Analisi Combinatoria
buildCircuitButton = Genera Circuito
exportLatexButton = Esportazione TeX
exportTableButton = Tabella esportazioni
expressionTab = Espressione
expressionTabTip = Visualizza e modifica le espressioni di output.
importTableButton = Importa Tabella
inputsOutputsTab = Ingressi e uscite
inputsOutputsTabTip = Visualizza e modifica l'insieme delle variabili di ingresso e di uscita.
minimizedTab = Ridotto
minimizedTabTip = Visualizza le espressioni ridotte corrispondenti alla tabella di verità.
tableTab = Tabella
tableTabTip = Visualizza e modifica la tabella di verità.
#
# gui/BuildCircuitButton.java
#
buildConfirmReplaceMessage = Sei sicuro di voler sostituire il circuito %s?
buildConfirmReplaceTitle = Conferma Sostituzione
buildDialogErrorTitle = Impossibile Generare Circuito
buildDialogTitle = Genera Circuito
buildDuplicatedNameError = Il nome del circuito non può essere uguale al nome di un ingresso o di un'uscita. Si prega di specificare un altro nome.
buildNameLabel = Nome del Circuito:
buildNandsLabel = Usa solo porte NAND
buildNeedCircuitError = Devi specificare un nome per il circuito.
buildNeedProjectError = Devi selezionare una destinazione per il progetto.
buildProjectLabel = Progetto Destinazione:
buildTwoInputsLabel = Usa solo porte a due input
replaceCircuitAction = Sostituisci Circuito
#
# gui/CsvReadParameterDialog.java
#
ConfirmCsvParameters = Continua
cvsFilePreview = Anteprima delle prime quattro righe del file letto:
seperatorSpace = {an8}Cosa?
SeperatorTab = {an8}e'... ...&lt;/ i&gt.
UsedQuotesInFile = Selezionare il carattere "quote" utilizzato nel file csv:
UsedSeperatorInFile = Selezionare il carattere "separatore" utilizzato nel file csv:
#
# gui/ExportLatexButton.java
#
cantWriteMessage = Non riesco a scrivere un file: %s
confirmOverwriteMessage = Sei sicuro di voler sovrascrivere il file %s?
confirmOverwriteTitle = Conferma Sovrascrivi
notFileMessage = Non un file: %s
saveButton = Tabella Verità di esportazione
saveErrorTitle = Errore nel salvataggio dei file
#
# gui/ExpressionTab.java
#
cantImportFormatError = Non è possibile importare questo tipo di dati
outputExpressionEdit = Espressioni di output (fare doppio clic per modificarle):
#
# gui/ImportTableButton.java
#
cantReadMessage = Non riesco a leggere il file: %s
DoNotKnowHowto = Non so come leggere o scrivere il file '%s' (l'estensione dovrebbe essere .txt o .csv).
openButton = Importazione della tabella di verità
openErrorTitle = Errore di lettura del file
#
# gui/KarnaughMapPanel.java
#
karnaughNoInputsError = Nessun ingresso disponibile.
karnaughNoOutputError = Nessun output selezionato.
karnaughTooManyInputsError = Troppi input per la tabella.
NoSelectedKmapGroup = Nessun gruppo selezionato.
SelectedKmapGroup = Gruppo selezionato:
#
# gui/MinimizedTab.java
#
expressionAltLogicrepresentation = Logica alternativa
expressionCalc = Calcolo dell'espressione
expressionLogicrepresentation = Logico
expressionMathrepresentation = Matematica
ExpressionNotation = Notazione:
expressionProgbitsrepresentation = Programmazione con bit
expressionProgboolsrepresentation = Programmazione con Boolean's
KMapLinedStyle = Foderato
KmapNumberedStyle = Numerati
KmapStyle = Stile:
minimizedFormat = Formato:
minimizedProductOfSums = Prodotto delle somme
minimizedSetButton = Imposta Come Espressione
minimizedSumOfProducts = Somma dei prodotti
#
# gui/OutputSelector.java
#
outputSelectLabel = Output:
#
# gui/TableTab.java
#
tableCompact = Crollo Righe duplicate di collasso
tableExpand = Mostra tutte le righe
tableNoInputs = (nessun input)
tableNoOutputs = (nessuna uscita)
tableRowsShown = %d delle righe %d indicate
#
# gui/TableTabCaret.java
#
tabcaretCompactRows = Compattazione delle file
#
# gui/TableTabClip.java
#
clipPasteEndError = Gli appunti vanno al di là della fine della tabella.
clipPasteErrorTitle = Incolla Errore
clipPasteSizeError = La regione incollata deve essere della stessa grandezza degli appunti.
clipPasteSupportedError = I contenuti degli appunti non possono essere incollati nell'editor.
#
# gui/VariableTab.java
#
inputVariables = Variabili di ingresso
outputVariables = Variabili di uscita
variableClickToAdd = Fare clic per aggiungere una nuova variabile
variableDuplicateError = Il nome è un duplicato di una variabile esistente.
variableMaximumError = (Raggiunta grandezza massima di %s.)
variablePartError = Il nome non puo contenere '%s'.
variableRangeFinalPar = Range: mancante ] direttamente dopo l'indice LSB
variableRangeInvalChar = Intervallo: caratteri non validi dopo la chiusura ].
variableRangeMSBWrong = Intervallo: a partire da [ dovrebbe essere seguito da un numero
variableRangeStartPar = Portata: Mancante guardando [
variableRangeWrongLB = Portata: L'indice MSB deve essere maggiore/uguale indice LSB
variableRangeWrongSep = Portata: L'indice MSB e l'indice LSB devono essere separati da ...
variableStartError = Il nome deve iniziare con una lettera.
#
# model/Entry.java
#
busError = Valori output in conflitto nel circuito.
oscillateError = Oscillazione circuito.
#
# model/Parser.java
#
badVariableName = %s non è una variabile input.
implicitAndOperator = (Implicita AND)
invalidCharacterError = Caratteri non riconoscuti: %s
lparenMissingError = Nessuna parentesi aperta corrispondente.
missingBraceError = Nessun tutore corrispondente: "%s"
missingIdentifierError = Identificatore mancante prima del deputato: "%s"
missingLeftOperandError = Operatore %s missing left operand.
missingRightOperandError = Operatore %s missing right operand.
missingSubscriptError = Iscrizione mancante: "%s"
rparenMissingError = Nessuna parentesi chiusa corrispondente.
unexpectedApostrophe = Apostrofo non previsto ("'")
unexpectedAssignmentError = Operatore di assegnazione inaspettato: "%s"
#
# model/Var.java
#
badVariableBitFormError = Il nome della variabile deve essere del modulo "name[i]".
badVariableColonError = Il nome della variabile deve apparire prima di ':':'.
badVariableIndexError = L'indice di bit variabile deve essere un intero
variableFormat = Le variabili devono essere della forma "name[N..0]".
variableTooMuchBits = Le variabili non possono essere larghe più di 32 bit


