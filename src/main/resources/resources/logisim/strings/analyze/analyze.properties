#
# data/CsvInterpretor.java
#
CsvBitNotSpecified = Line %d of the csv file '%s' does not contain bit %d of variable '%s', aborting.
CsvDuplicatedBit = Line %d of the csv file '%s' contains twice the bit %d of the variable '%s', aborting.
CsvDuplicatedVar = Line %d of the csv file '%s' contains multiple times the variable '%s', aborting.
CsvIncorrectBitOrder = Line %d of the csv file '%s' contains a incorrect bit-sequence for variable '%s', aborting.
CsvIncorrectEmpty = Line %d of the csv file '%s' contains an incorrect empty field at position %d, aborting.
CsvIncorrectLine = Line %d of the csv file '%s' has %d entries instead of the %d required, aborting.
CsvIncorrectVarName = Line %d of the csv file '%s' contains the incorrect formatted label '%s', aborting.
CsvInvalidEntry = Line %d of the csv file '%s' contains an invalid entry '%s' at field %d, aborting.
CsvNoEntries = File "%s" does not contain any entries, aborting.
CsvNoInputsFound = Line %d of the csv file '%s' does not contain any inputs, aborting.
CsvNoSepFound = Line %d of the csv file '%s' contains no separator field, aborting.
CsvNotEnoughEmpty = Line %d of the csv file '%s' contains not enough empty fields after variable '%s', aborting.
#
# data/ExpressionRenderData.java
#
expressionEmpty = (empty)
#
# file/AnalyzerTexWriter.java
#
latexBabelLanguage = english
latexEmpty = Empty analyzer
latexEmptyText = As the analyzer did not have input variables and/or output variables at the moment this document was generated there is nothing to show.
latexHeader = Logisim-evolution generated document on %s
latexIntroduction = Introduction
latexIntroductionText = This document was generated by logisim-evolution. Any part of the TeX sources can be used in your own documents without any problems. In case you want to use all/parts of this generated TeX-sources please (1) do not forget to include the required packages, and (2) include a remark that this source was generated by logisim-evolution.
latexKarnaugh = Karnaugh diagrams
latexKarnaughEmpty = Empty Karnaugh diagrams
latexKarnaughFilledIn = Filled in Karnaugh diagrams
latexKarnaughFilledInGroups = Filled in Karnaugh diagrams with covers
latexKarnaughText = This section shows various versions of the Karnaugh diagrams of the given functions.
latexKarnaughToBig = Cannot display Karnaugh diagrams with more than %d input vars.
latexMinimal = Minimal expressions
latexTruthTable = Truth table
latexTruthTableComlete = Complete truth table
latexTruthTableCompact = Compacted truth table
latexTruthTableText = The table may be way to big to be displayed on the page. At generation time no calculation was done on the size of the table with respect to the width/height of the page.
latexTruthTableToBig = \\\\~\\\\The truth table has more than %d entries, it makes no sense to show it here.
tableLatexFilter = Logisim-evolution TeX document (*.tex)
#
# file/TruthtableCsvFile.java
#
tableCsvFileFilter = Logisim-evolution Truth Table (*.csv)
#
# file/TruthtableTextFile.java
#
tableParseErrorMessage = Ignore errors and try again?
tableParseErrorTitle = Error Parsing Truth Table
tableRemark1 = # Truth table
tableRemark2 = # Generated from circuit %s
tableRemark3 = # Exported on %s
tableRemark4 = # Hints and Notes on Formatting:\n# * You can edit this file then import it back into Logisim!\n# * Anything after a '#' is a comment and will be ignored.\n# * Blank lines and separator lines (e.g., ~~~~~~) are ignored.\n# * Keep column names simple (no spaces, punctuation, etc.)\n# * 'Name[N..0]' indicates an N+1 bit variable, whereas\n#   'Name' by itself indicates a 1-bit variable.\n# * You can use 'x' or '-' to indicate \"don't care\" for both\n#   input and output bits.\n# * You can use binary (e.g., '10100011xxxx') notation or\n#   or hex (e.g., 'C3x'). Logisim will figure out which is which.
tableTxtFileFilter = Logisim-evolution Truth Table (*.txt)
#
# gui/Analyzer.java
#
analyzePleaseWait = Please wait
analyzerWindowTitle = Combinational Analysis
buildCircuitButton = Build Circuit
exportLatexButton = Export TeX
exportTableButton = Export Table
expressionTab = Expression
expressionTabTip = View and manipulate outputs' expressions.
importTableButton = Import Table
inputsOutputsTab = Inputs & Outputs
inputsOutputsTabTip = View and edit the set of input and output variables.
minimizedTab = Minimized
minimizedTabTip = View minimized expressions corresponding to truth table.
tableTab = Table
tableTabTip = View and manipulate the truth table.
#
# gui/BuildCircuitButton.java
#
buildConfirmReplaceMessage = Are you sure you want to replace the circuit %s?
buildConfirmReplaceTitle = Confirm Replace
buildDialogErrorTitle = Could Not Build Circuit
buildDialogTitle = Build Circuit
buildDuplicatedNameError = The circuit name cannot be equal to the name of an input or an output. Please specify another name.
buildNameLabel = Circuit Name:
buildNandsLabel = Use NAND Gates Only
buildNeedCircuitError = You must specify a circuit name.
buildNeedProjectError = You must select a destination project.
buildProjectLabel = Destination Project:
buildTwoInputsLabel = Use Two-Input Gates Only
replaceCircuitAction = Replace Circuit
#
# gui/CsvReadParameterDialog.java
#
ConfirmCsvParameters = Continue
cvsFilePreview = Preview of the first four rows of the read-in file:
seperatorSpace = {space}
SeperatorTab = {tab}
UsedQuotesInFile = Select the "quote" character that is used in the csv file:
UsedSeperatorInFile = Select the "separator" character that is used in the csv file:
#
# gui/ExportLatexButton.java
#
cantWriteMessage = Can't write file: %s
confirmOverwriteMessage = Are you sure you want to overwrite file %s?
confirmOverwriteTitle = Confirm Overwrite
notFileMessage = Not a file: %s
saveButton = Export Truth Table
saveErrorTitle = Error Saving File
#
# gui/ExpressionTab.java
#
cantImportFormatError = Can't import this type of data
outputExpressionEdit = Output Expressions (double-click to edit):
#
# gui/ImportTableButton.java
#
cantReadMessage = Can't read file: %s
DoNotKnowHowto = Do not know how to read or write file '%s' (extension should be .txt or .csv).
openButton = Import Truth Table
openErrorTitle = Error Reading File
#
# gui/KarnaughMapPanel.java
#
karnaughNoInputsError = No inputs available.
karnaughNoOutputError = No output selected.
karnaughTooManyInputsError = Too many inputs for table.
NoSelectedKmapGroup = No group selected.
SelectedKmapGroup = Selected group:
#
# gui/MinimizedTab.java
#
expressionAltLogicrepresentation = Alternative Logical
expressionCalc = Calculating Expression
expressionLogicrepresentation = Logical
expressionMathrepresentation = Mathematical
ExpressionNotation = Notation:
expressionProgbitsrepresentation = Programming with bits
expressionProgboolsrepresentation = Programming with booleans
KMapLinedStyle = Lined
KmapNumberedStyle = Numbered
KmapStyle = Style:
minimizedFormat = Format:
minimizedProductOfSums = Product of sums
minimizedSetButton = Set As Expression
minimizedSumOfProducts = Sum of products
#
# gui/OutputSelector.java
#
outputSelectLabel = Output:
#
# gui/TableTab.java
#
tableCompact = Collapse Duplicated Rows
tableExpand = Show All Rows
tableNoInputs = (no inputs)
tableNoOutputs = (no outputs)
tableRowsShown = %d of %d rows shown
#
# gui/TableTabCaret.java
#
tabcaretCompactRows = Compacting Rows
#
# gui/TableTabClip.java
#
clipPasteEndError = The clipboard goes beyond the end of the table.
clipPasteErrorTitle = Paste Error
clipPasteSizeError = Paste region must be same size as clipboard.
clipPasteSupportedError = The clipboard contents cannot be pasted into the editor.
#
# gui/VariableTab.java
#
inputVariables = Input Variables
outputVariables = Output Variables
variableClickToAdd = Click to add a new variable
variableDuplicateError = Name duplicates existing variable.
variableMaximumError = (Reached maximum size of %s.)
variablePartError = Name cannot contain '%s'.
variableRangeFinalPar = Range: missing ] directly after LSB index
variableRangeInvalChar = Range: invalid chars after closing ]
variableRangeMSBWrong = Range: starting [ should be followed by a number
variableRangeStartPar = Range: Missing starting [
variableRangeWrongLB = Range: MSB index must be bigger/equal LSB index
variableRangeWrongSep = Range: MSB index and LSB index must be separated by ..
variableStartError = Name must begin with a letter.
#
# model/Entry.java
#
busError = Conflicting output values in circuit.
oscillateError = Circuit oscillates.
#
# model/Parser.java
#
badVariableName = "%s" is not an input variable.
implicitAndOperator = (Implicit AND)
invalidCharacterError = Unrecognized characters: '%s'
lparenMissingError = No matching opening parenthesis.
missingBraceError = No matching brace: "%s"
missingIdentifierError = Missing identifier before subscript: "%s"
missingLeftOperandError = Operator "%s" missing left operand.
missingRightOperandError = Operator "%s" missing right operand.
missingSubscriptError = Missing subscript: "%s"
rparenMissingError = No matching closing parenthesis.
unexpectedApostrophe = Unexpected apostrophe ("'")
unexpectedAssignmentError = Unexpected assignment operator: "%s"
#
# model/Var.java
#
badVariableBitFormError = Variable name must be of the form 'name[i]'
badVariableColonError = Variable name must appear before ':'
badVariableIndexError = Variable bit index must be an integer
variableFormat = Variables must be of the form 'name[N..0]'
variableTooMuchBits = Variables can't be more than 32 bits wide


