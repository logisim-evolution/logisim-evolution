#
# data/CsvInterpretor.java
#
CsvBitNotSpecified = Строка %d файла '%s' csv не содержит бит %d переменной '%s', выполняющей прерывание.
CsvDuplicatedBit = Строка %d файла '%s' csv содержит в два раза больше бит %d переменной '%s', прерывая работу.
CsvDuplicatedVar = Строка %d файла '%s' csv содержит переменную '%s', которая прерывается в несколько раз больше переменной '%s'.
CsvIncorrectBitOrder = В строке %d файла csv '%s' содержится некорректная битовая последовательность для переменной '%s', которая прерывается.
CsvIncorrectEmpty = В строке %d файла '%s' csv содержится некорректное пустое поле в позиции %d, при прерывании.
CsvIncorrectLine = В строке %d файла csv '%s' вместо требуемого значения %d вводится значение %d, которое прерывается.
CsvIncorrectVarName = Строка %d файла csv '%s' содержит неправильно отформатированную метку '%s', прерывание.
CsvInvalidEntry = Строка %d файла '%s' csv содержит некорректную запись '%s' в поле %d, которая прерывается.
# ==> CsvNoEntries = 
CsvNoInputsFound = Строка %d файла csv '%s' не содержит никаких входов для прерывания.
CsvNoSepFound = Строка %d файла '%s' csv не содержит разделительного поля, прерывание.
CsvNotEnoughEmpty = Строка %d '%s' файла csv содержит недостаточно пустых полей после переменной '%s' при прерывании.
#
# data/ExpressionRenderData.java
#
expressionEmpty = (пусто)
#
# file/AnalyzerTexWriter.java
#
latexBabelLanguage = russian
latexEmpty = Пустой анализатор
latexEmptyText = Поскольку анализатор не имел входных и/или выходных переменных на момент написания данного документа, то показывать их нечего.
latexHeader = Сгенерированный документ Logisim-evolution на %s
latexIntroduction = Введение
latexIntroductionText = Этот документ был разработан в результате логистической эволюции. Любая часть исходных текстов TeX может быть использована в ваших собственных документах без каких-либо проблем. Если вы хотите использовать все/части сгенерированных TeX-источников, не забудьте (1) включить необходимые пакеты и (2) отметить, что этот источник был создан в результате логистической эволюции.
latexKarnaugh = Диаграммы Карнауга
latexKarnaughEmpty = Пустые диаграммы Карнауга
latexKarnaughFilledIn = Заполнил диаграммы Карнауга.
latexKarnaughFilledInGroups = Заполненные диаграммы Карнауга с крышками
latexKarnaughText = В данном разделе представлены различные варианты диаграмм Карнауга данных функций.
latexKarnaughToBig = Невозможно отобразить диаграммы Карнауга с входными переменными более чем в %d.
latexMinimal = Минимальные выражения
latexTruthTable = Таблица правды
latexTruthTableComlete = Полная таблица истинности
latexTruthTableCompact = Сжатая таблица истинности
latexTruthTableText = Таблица может быть на пути к большому размеру для отображения на странице. Во время генерации не было выполнено вычислений по размеру таблицы относительно ширины/высоты страницы.
latexTruthTableToBig = \\\\~\\\\The Таблица истинности содержит более %d записей, показывать ее здесь не имеет смысла.
tableLatexFilter = Документ Logisim-evolution TeX (*.tex)
#
# file/TruthtableCsvFile.java
#
tableCsvFileFilter = Таблица правдивости логизим-эволюции (*.csv)
#
# file/TruthtableTextFile.java
#
tableParseErrorMessage = Пропустить ошибки и повторить попытку?
tableParseErrorTitle = Таблица правдивости анализа ошибок
tableRemark1 = # y Таблица Правды
tableRemark2 = # Генерируется из контура %s
tableRemark3 = # Экспорт на %s
tableRemark4 = # Подсказки и примечания по форматированию:\n# * Вы можете отредактировать этот файл и импортировать его обратно в Logisim!\n# * Все что угодно после "#" является комментарием и будет проигнорировано.\n# * Пустые строки и разделительные линии (например, ~~~~~~~~) игнорируются.\n# * Имена столбцов должны быть простыми (без пробелов, знаков препинания и т.д.).\n# * 'Name[N..0]' означает N 1-битную переменную, в то время как\n# "Имя" само по себе означает 1-битную переменную.\nВы можете использовать "x" или "-", чтобы указать "don't care" для обоих случаев.\n# входные и выходные биты.\nВы можете использовать двоичные (например, '10100011xxxxxx') обозначения или\n# или гекс (например, "C3x"). Логизим выяснит, кто из них какой.
tableTxtFileFilter = Таблица правдивости логизим-эволюции (*.txt)
#
# gui/Analyzer.java
#
analyzePleaseWait = Пожалуйста, подождите.....
analyzerWindowTitle = Комбинационный анализ
buildCircuitButton = Построить схему
exportLatexButton = Экспорт TeX
exportTableButton = Таблица экспорта
expressionTab = Выражение
expressionTabTip = Просмотреть и изменять выражения для выходов.
importTableButton = Таблица импорта
inputsOutputsTab = Входы и выходы
inputsOutputsTabTip = Просмотр и редактирование набора входных и выходных переменных.
minimizedTab = Минимизация
minimizedTabTip = Просмотреть минимизированные выражения, соответствующие таблице истинности.
tableTab = Таблица
tableTabTip = Просмотреть и изменять таблицу истинности.
#
# gui/BuildCircuitButton.java
#
buildConfirmReplaceMessage = Вы уверены, что хотите заменить схему %s?
buildConfirmReplaceTitle = Подтвердить замену
buildDialogErrorTitle = Невозможно построить схему
buildDialogTitle = Построить схему
buildDuplicatedNameError = Имя цепи не может быть равно имени входа или выхода. Пожалуйста, укажите другое имя.
buildNameLabel = Название схемы:
buildNandsLabel = Использовать только элементы И-НЕ
buildNeedCircuitError = Вы должны указать название схемы.
buildNeedProjectError = Вы должны выбрать целевой проект.
buildProjectLabel = Целевой проект:
buildTwoInputsLabel = Использовать только двухвходовые элементы
replaceCircuitAction = Заменить схему
#
# gui/CsvReadParameterDialog.java
#
ConfirmCsvParameters = Продолжить
cvsFilePreview = Предварительный просмотр первых четырех строк читаемого файла:
seperatorSpace = {пространство}
SeperatorTab = {tab]
UsedQuotesInFile = Выберите символ "quote", который используется в файле csv:
UsedSeperatorInFile = Выберите символ "разделитель", который используется в файле csv:
#
# gui/ExportLatexButton.java
#
cantWriteMessage = Не могу записать файл: %s
confirmOverwriteMessage = Вы уверены, что хотите перезаписать файлы %s?
confirmOverwriteTitle = Подтвердить перезапись
notFileMessage = Не файл: %s
saveButton = Таблица истинности экспорта
saveErrorTitle = Ошибка сохранения файла
#
# gui/ExpressionTab.java
#
cantImportFormatError = Невозможно импортировать данные такого типа
outputExpressionEdit = Вывод выражений (двойной щелчок мыши для редактирования):
#
# gui/ImportTableButton.java
#
cantReadMessage = Не могу прочитать файл: %s
DoNotKnowHowto = Не знаю, как читать или записывать файлы '%s' (расширение должно быть .txt или .csv).
openButton = Импортировать таблицу истины
openErrorTitle = Файл считывания ошибок
#
# gui/KarnaughMapPanel.java
#
karnaughNoInputsError = Входы недоступны.
karnaughNoOutputError = Выход не выбран.
karnaughTooManyInputsError = Слишком много входов для таблицы.
NoSelectedKmapGroup = Группа не выбрана.
SelectedKmapGroup = Выбранная группа:
#
# gui/MinimizedTab.java
#
expressionAltLogicrepresentation = Альтернативная логика
expressionCalc = Расчет выражения
expressionLogicrepresentation = Логический
expressionMathrepresentation = Математический
ExpressionNotation = Обозначение:
expressionProgbitsrepresentation = Программирование битами
expressionProgboolsrepresentation = Программирование с помощью Boolean's
KMapLinedStyle = Подкладка
KmapNumberedStyle = Пронумерованный
KmapStyle = Стиль:
minimizedFormat = Формат:
minimizedProductOfSums = Произведение сумм
minimizedSetButton = Установить как выражение
minimizedSumOfProducts = Сумма произведений
#
# gui/OutputSelector.java
#
outputSelectLabel = Выход:
#
# gui/TableTab.java
#
tableCompact = Свернуть повторяющиеся строки
tableExpand = Показать все строки
tableNoInputs = (нет входов)
tableNoOutputs = (нет выхода)
tableRowsShown = %d показанных строк %d
#
# gui/TableTabCaret.java
#
tabcaretCompactRows = Уплотнительные ряды
#
# gui/TableTabClip.java
#
clipPasteEndError = Буфер выходит за пределы таблицы.
clipPasteErrorTitle = Ошибка вставки
clipPasteSizeError = Область вставки должна быть того же размера, что буфер обмена.
clipPasteSupportedError = Содержимое буфера обмена не может быть вставлено в редактор.
#
# gui/VariableTab.java
#
inputVariables = Входные переменные
outputVariables = Выходные переменные
variableClickToAdd = Нажмите, чтобы добавить новую переменную
variableDuplicateError = Имя дублирует существующую переменную.
variableMaximumError = (Достигнут максимальный размер %s.)
variablePartError = Имя не может содержать '%s'.
variableRangeFinalPar = Диапазон: отсутствует ] сразу после индекса LSB
variableRangeInvalChar = Диапазон: недопустимые символы после закрытия ]
variableRangeMSBWrong = Диапазон: начиная с [ должен сопровождаться цифрой
variableRangeStartPar = Дальность: Пропал без вести глядя [
variableRangeWrongLB = Дальность: Индекс MSB должен быть больше/равен индексу LSB.
variableRangeWrongSep = Дальность: Индекс MSB и индекс LSB должны быть разделены знаком ...
variableStartError = Имя должно начинаться с буквы.
#
# model/Entry.java
#
busError = Конфликтующие выходные значения в схеме.
oscillateError = Схема возбуждается.
#
# model/Parser.java
#
badVariableName = %s не является входной переменной.
implicitAndOperator = (Неявное И)
invalidCharacterError = Символы не распознаны: %s
lparenMissingError = Нет соответствующей открывающей скобки.
missingBraceError = Нет совпадающих брекетов: "%s"
missingIdentifierError = Отсутствует идентификатор перед подпиской: "%s"
missingLeftOperandError = Для оператора %s отсутствует левый операнд.
missingRightOperandError = Для оператора %s отсутствует правый операнд.
missingSubscriptError = Отсутствует подписчик: "%s"
rparenMissingError = Нет соответствующей закрывающей скобки.
unexpectedApostrophe = Неожиданный апостроф ("'")
unexpectedAssignmentError = Неожиданное назначение оператора: "%s"
#
# model/Var.java
#
badVariableBitFormError = Имя переменной должно иметь вид 'name[i]'.
badVariableColonError = Имя переменной должно отображаться перед символом ":".
badVariableIndexError = Переменный битовый индекс должен представлять собой целое число
variableFormat = Переменные должны иметь вид 'name[N..0]'.
variableTooMuchBits = Переменные не могут быть шириной более 32 бит.


