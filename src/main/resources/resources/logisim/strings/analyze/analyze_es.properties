#
# data/CsvInterpretor.java
#
CsvBitNotSpecified = La línea %d del archivo csv '%s' no contiene bit %d de la variable '%s', abortando.
CsvDuplicatedBit = La línea %d del archivo csv '%s' contiene dos veces el bit %d de la variable '%s', abortando.
CsvDuplicatedVar = La línea %d del archivo csv '%s' contiene múltiples veces la variable '%s', abortando.
CsvIncorrectBitOrder = La línea %d del archivo csv '%s' contiene una secuencia de bits incorrecta para la variable '%s', abortando.
CsvIncorrectEmpty = La línea %d del archivo csv '%s' contiene un campo vacío incorrecto en la posición %d, abortando.
CsvIncorrectLine = La línea %d del archivo csv '%s' tiene entradas %d en lugar de las %d requeridas, abortando.
CsvIncorrectVarName = La línea %d del archivo csv '%s' contiene la etiqueta incorrecta '%s', abortando.
CsvInvalidEntry = La línea %d del archivo csv '%s' contiene una entrada no válida '%s' en el campo %d, abortando.
# ==> CsvNoEntries = 
CsvNoInputsFound = La línea %d del archivo csv '%s' no contiene ninguna entrada, abortando.
CsvNoSepFound = La línea %d del archivo csv '%s' no contiene ningún campo separador, abortando.
CsvNotEnoughEmpty = La línea %d del archivo csv '%s' no contiene suficientes campos vacíos después de la variable '%s', abortando.
#
# data/ExpressionRenderData.java
#
expressionEmpty = (vacío)
#
# file/AnalyzerTexWriter.java
#
latexBabelLanguage = spanish
latexEmpty = Analizador de vacío
latexEmptyText = Como el analizador no tenía variables de entrada y/o salida en el momento en que se generó este documento, no hay nada que mostrar.
latexHeader = Documento generado por Logisim-evolution en %s
latexIntroduction = Introducción
latexIntroductionText = Este documento fue generado por logisim-evolution. Cualquier parte de las fuentes TeX puede ser utilizada en sus propios documentos sin ningún problema. En caso de que desee utilizar todas/partes de estas fuentes TeX generadas, por favor (1) no olvide incluir los paquetes requeridos, y (2) incluya una observación de que esta fuente fue generada por logisim-evolution.
latexKarnaugh = Diagramas de Karnaugh
latexKarnaughEmpty = Diagramas de Karnaugh vacíos
latexKarnaughFilledIn = Rellenado de los diagramas de Karnaugh
latexKarnaughFilledInGroups = Relleno de diagramas de Karnaugh con tapas
latexKarnaughText = Esta sección muestra varias versiones de los diagramas de Karnaugh de las funciones dadas.
latexKarnaughToBig = No puede mostrar los diagramas de Karnaugh con más de %d vars de entrada.
latexMinimal = Expresiones mínimas
latexTruthTable = Tabla de verdad
latexTruthTableComlete = Tabla de la verdad completa
latexTruthTableCompact = Tabla de verdad compactada
latexTruthTableText = La tabla puede ser demasiado grande para ser mostrada en la página. En el momento de la generación no se realizó ningún cálculo sobre el tamaño de la tabla con respecto a la anchura/altura de la página.
latexTruthTableToBig = \\\\~\\\\La tabla de verdad tiene más de un %d de entradas, no tiene sentido mostrarla aquí.
tableLatexFilter = Documento Logisim-evolución TeX (*.tex)
#
# file/TruthtableCsvFile.java
#
tableCsvFileFilter = Tabla de verdad de la evolución de Logisim (*.csv)
#
# file/TruthtableTextFile.java
#
tableParseErrorMessage = ¿Ignorar errores y volver a intentarlo?
tableParseErrorTitle = Error analizando la tabla de verdad
tableRemark1 = # Tabla de verdad
tableRemark2 = # Generado a partir de un circuito %s
tableRemark3 = # Exportado en %s
tableRemark4 = # Consejos y notas sobre el formato:\n# * Puede editar este archivo y luego importarlo de nuevo a Logisim!\n# * Cualquier cosa después de un '#' es un comentario y será ignorado.\n# * Las líneas en blanco y las líneas de separación (por ejemplo, ~~~~~~~) se ignoran.\n%a * Mantener nombres de columnas simples (sin espacios, puntuación, etc.)\n# * 'Nombre[N..0]' indica una variable de 1 bit N, mientras que\n# 'Nombre' por sí mismo indica una variable de 1 bit.\nPuedes usar'x' o'-' para indicar "no me importa" para ambos.\n# bits de entrada y salida.\nPuede utilizar la notación binaria (por ejemplo,'10100011xxxxxx') o\ny o hexadecimal (por ejemplo, 'C3x'). Logisim averiguará cuál es cuál.
tableTxtFileFilter = Tabla de verdad de la evolución de Logisim (*.txt)
#
# gui/Analyzer.java
#
analyzePleaseWait = Por favor, espere
analyzerWindowTitle = Análisis combinacional
buildCircuitButton = Crear circuito
exportLatexButton = Exportar TeX
exportTableButton = Tabla de exportación
expressionTab = Expresión
expressionTabTip = Ver y modificar las expresiones de salida.
importTableButton = Importar Tabla
inputsOutputsTab = Entradas y salidas
inputsOutputsTabTip = Ver y editar el conjunto de variables de entrada y salida.
minimizedTab = Minimizado
minimizedTabTip = Ver las expresiones minimizadas correspondientes a la tabla de verdad.
tableTab = Tabla
tableTabTip = Ver y modificar la tabla de verdad.
#
# gui/BuildCircuitButton.java
#
buildConfirmReplaceMessage = ¿Estás seguro de que quieres reemplazar el circuito %s?
buildConfirmReplaceTitle = Confirmar reemplazo
buildDialogErrorTitle = No se pudo crear el circuito
buildDialogTitle = Crear circuito
buildDuplicatedNameError = El nombre del circuito no puede ser igual al nombre de una entrada o una salida. Por favor, especifique otro nombre.
buildNameLabel = Nombre del circuito:
buildNandsLabel = Sólo puertas NAND
buildNeedCircuitError = Debes especificar un nobre de circuito.
buildNeedProjectError = Debes seleccionar un proyecto destino.
buildProjectLabel = Proyecto destino:
buildTwoInputsLabel = Sólo puertas con dos entradas
replaceCircuitAction = Reemplazar circuito
#
# gui/CsvReadParameterDialog.java
#
ConfirmCsvParameters = Continuar
cvsFilePreview = Vista previa de las primeras cuatro filas del archivo de lectura:
seperatorSpace = {espacio}
SeperatorTab = {pestaña}
UsedQuotesInFile = Seleccione el carácter "quote" que se utiliza en el archivo csv:
UsedSeperatorInFile = Seleccione el carácter "separador" que se utiliza en el archivo csv:
#
# gui/ExportLatexButton.java
#
cantWriteMessage = No puedo escribir el archivo: %s
confirmOverwriteMessage = ¿Estás seguro de que quieres sobreescribir %s de archivos?
confirmOverwriteTitle = Confirmar sobrescritura
notFileMessage = No es un archivo: %s
saveButton = Tabla de la verdad de la exportación
saveErrorTitle = Error al guardar el archivo
#
# gui/ExpressionTab.java
#
cantImportFormatError = No se pueden importar este tipo de datos
outputExpressionEdit = Expresiones de salida (doble clic para editar):
#
# gui/ImportTableButton.java
#
cantReadMessage = No puedo leer el archivo: %s
DoNotKnowHowto = No sabe leer ni escribir el archivo '%s' (la extensión debe ser .txt o.csv).
openButton = Importar tabla de verdad
openErrorTitle = Error al leer el archivo
#
# gui/KarnaughMapPanel.java
#
karnaughNoInputsError = No hay entradas disponibles.
karnaughNoOutputError = No hay salidas seleccionadas.
karnaughTooManyInputsError = Demasiadas entradas por tabla.
NoSelectedKmapGroup = Ningún grupo seleccionado.
SelectedKmapGroup = Grupo seleccionado:
#
# gui/MinimizedTab.java
#
expressionAltLogicrepresentation = Lógica alternativa
expressionCalc = Cálculo de la expresión
expressionLogicrepresentation = Lógico
expressionMathrepresentation = Matemáticas
ExpressionNotation = Notación:
expressionProgbitsrepresentation = Programación con bits
expressionProgboolsrepresentation = Programación con Boolean's
KMapLinedStyle = Forrado
KmapNumberedStyle = Numerada
KmapStyle = Estilo:
minimizedFormat = Formato:
minimizedProductOfSums = Producto de sumas
minimizedSetButton = Establecer como expresión
minimizedSumOfProducts = Suma de productos
#
# gui/OutputSelector.java
#
outputSelectLabel = Salida:
#
# gui/TableTab.java
#
tableCompact = Ocultar líneas duplicadas
tableExpand = Mostrar todas las líneas
tableNoInputs = (sin entradas)
tableNoOutputs = (sin salidas)
tableRowsShown = %d de %d filas mostradas
#
# gui/TableTabCaret.java
#
tabcaretCompactRows = Compactación de filas
#
# gui/TableTabClip.java
#
clipPasteEndError = El portapapeles sobrepasa el final de la tabla.
clipPasteErrorTitle = Error al pegar
clipPasteSizeError = La región para pegar debe ser del mismo tamaño que el portapapeles.
clipPasteSupportedError = Los contenidos del portapapeles no se han podido pegar en el editor.
#
# gui/VariableTab.java
#
inputVariables = Variables de entrada
outputVariables = Variables de salida
variableClickToAdd = Haga clic para añadir una nueva variable
variableDuplicateError = El nombre coincide con el de una variable existente.
variableMaximumError = (Alcanzado el máximo tamaño de %s).
variablePartError = El nombre no puede contener '%s'.
variableRangeFinalPar = Rango: falta ] directamente después del índice LSB
variableRangeInvalChar = Rango: caracteres no válidos después de cerrar ]
variableRangeMSBWrong = Rango: comenzando [ debe ser seguido por un número
variableRangeStartPar = Alcance: Desaparecido mirando fijamente [
variableRangeWrongLB = Alcance: El índice MSB debe ser mayor/igual que el índice LSB
variableRangeWrongSep = Alcance: El índice MSB y el índice LSB deben estar separados por ..
variableStartError = El nombre debe comenzar con una letra.
#
# model/Entry.java
#
busError = Conflicto de valores de salida en circuito.
oscillateError = El circuito oscila.
#
# model/Parser.java
#
badVariableName = %s no es una variable de entrada.
implicitAndOperator = (AND implícito)
invalidCharacterError = Caracteres desconocidos: %s
lparenMissingError = Falta apertura de paréntesis.
missingBraceError = No hay aparato ortopédico compatible: "%s"
missingIdentifierError = Falta identificador antes del subíndice: "%s"
missingLeftOperandError = Falta el operando izquierdo del operador %s.
missingRightOperandError = Falta el operando derecho del operador %s.
missingSubscriptError = Falta el subíndice: "%s"
rparenMissingError = Falta cierre de paréntesis.
unexpectedApostrophe = Apóstrofo inesperado ("'")
unexpectedAssignmentError = Un operador de asignación inesperado: "%s"
#
# model/Var.java
#
badVariableBitFormError = El nombre de la variable debe ser de la forma ``nombre[i]''.
badVariableColonError = El nombre de la variable debe aparecer antes de "':".
badVariableIndexError = El índice de bit variable debe ser un número entero
variableFormat = Las variables deben ser de la forma `nombre[N..0]''.
variableTooMuchBits = Las variables no pueden tener más de 32 bits de ancho


