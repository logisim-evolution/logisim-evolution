#
# data/CsvInterpretor.java
#
CsvBitNotSpecified = Die Zeile %d der CSV-Datei'%s' enthält kein Bit %d der Variablen'%s' und bricht ab.
CsvDuplicatedBit = Die Zeile %d der CSV-Datei '%s' enthält doppelt so viel Bit %d wie die Variable '%s' und bricht ab.
CsvDuplicatedVar = Die Zeile %d der CSV-Datei '%s' enthält mehrere Male die Variable '%s' und bricht ab.
CsvIncorrectBitOrder = Die Zeile %d der CSV-Datei '%s' enthält eine falsche Bitfolge für die Variable'%s', die abgebrochen wird.
CsvIncorrectEmpty = Die Zeile %d der CSV-Datei '%s' enthält ein falsches leeres Feld an der Position %d und bricht ab.
CsvIncorrectLine = Die Zeile %d der CSV-Datei '%s' hat %d Einträge anstelle der erforderlichen %d und bricht ab.
CsvIncorrectVarName = Die Zeile %d der CSV-Datei '%s' enthält das falsch formatierte Label '%s' und wird abgebrochen.
CsvInvalidEntry = Die Zeile %d der CSV-Datei '%s' enthält einen ungültigen Eintrag '%s' im Feld %d, der abgebrochen wird.
# ==> CsvNoEntries = 
CsvNoInputsFound = Die Zeile %d der CSV-Datei '%s' enthält keine Eingaben und bricht ab.
CsvNoSepFound = Die Zeile %d der CSV-Datei '%s' enthält kein Trennzeichenfeld und bricht ab.
CsvNotEnoughEmpty = Die Zeile %d der CSV-Datei '%s' enthält nicht genügend leere Felder nach der Variablen '%s' und bricht ab.
#
# data/ExpressionRenderData.java
#
expressionEmpty = (leer)
#
# file/AnalyzerTexWriter.java
#
latexBabelLanguage = german
latexEmpty = Analysator leeren
latexEmptyText = Da der Analysator zum Zeitpunkt der Erstellung dieses Dokuments noch keine Eingangs- und/oder Ausgangsvariablen hatte, gibt es nichts zu zeigen.
latexHeader = Logisim-Evolution generiertes Dokument auf %s
latexIntroduction = Einführung
latexIntroductionText = Dieses Dokument wurde durch logisim-evolution erstellt. Jeder Teil der TeX-Quellen kann problemlos in Ihren eigenen Dokumenten verwendet werden. Falls Sie alle/Teile dieser generierten TeX-Quellen verwenden möchten, vergessen Sie bitte (1) nicht, die benötigten Pakete anzugeben, und (2) fügen Sie einen Hinweis hinzu, dass diese Quelle durch logisim-evolution generiert wurde.
latexKarnaugh = Karnaugh Diagramme
latexKarnaughEmpty = Leere Karnaugh-Diagramme
latexKarnaughFilledIn = Ausgefüllt in Karnaugh-Diagrammen
latexKarnaughFilledInGroups = Ausgefüllt in Karnaugh-Diagrammen mit Abdeckungen
latexKarnaughText = Dieser Abschnitt zeigt verschiedene Versionen der Karnaugh-Diagramme der angegebenen Funktionen.
latexKarnaughToBig = Karnaugh-Diagramme mit mehr als %d Eingangsvariablen können nicht angezeigt werden.
latexMinimal = Minimale Ausdrücke
latexTruthTable = Wahrheitstabelle
latexTruthTableComlete = Vollständige Wahrheitstabelle
latexTruthTableCompact = Verdichtete Wahrheitstabelle
latexTruthTableText = Die Tabelle kann viel zu groß sein, um auf der Seite angezeigt zu werden. Zum Zeitpunkt der Generierung wurde keine Berechnung der Größe der Tabelle in Bezug auf die Breite / Höhe der Seite durchgeführt.
latexTruthTableToBig = \\\\~\\\\Die Wahrheitstabelle hat mehr als %d Einträge, es macht keinen Sinn, sie hier zu zeigen.
tableLatexFilter = Logisim-Evolution TeX-Dokument (*.tex)
#
# file/TruthtableCsvFile.java
#
tableCsvFileFilter = Logisim-Entwicklung Wahrheitstabelle (*.csv)
#
# file/TruthtableTextFile.java
#
tableParseErrorMessage = Fehler ignorieren und erneut versuchen?
tableParseErrorTitle = Fehler beim Parsen der Wahrheitstabelle
tableRemark1 = # Wahrheitstabelle
tableRemark2 = # Erzeugt aus der Schaltung %s
tableRemark3 = # Exportiert am %s
tableRemark4 = # Hinweise und Hinweise zur Formatierung:\n# * Sie können diese Datei bearbeiten und dann wieder in Logisim importieren!\n# * Alles nach einem'#' ist ein Kommentar und wird ignoriert.\n# * Leerzeilen und Trennzeichen (z.B. ~~~~~~) werden ignoriert.\n# * Halten Sie die Spaltennamen einfach (keine Leerzeichen, Satzzeichen, etc.).\n# *'Name[N..0]' bezeichnet eine N 1 Bit Variable, während\n# 'Name' selbst bezeichnet eine 1-Bit-Variable.\n# * Du kannst "x" oder "-" verwenden, um anzugeben, dass "don't care" für beide ist.\n# Ein- und Ausgangsbits.\n# * Sie können die binäre (z.B. 10100011xxxxxx') Notation verwenden oder\n# oder hex (z.B.'C3x'). Logisim wird herausfinden, wer was ist.
tableTxtFileFilter = Logisim-Entwicklung Wahrheitstabelle (*.txt)
#
# gui/Analyzer.java
#
analyzePleaseWait = Bitte Warten.......
analyzerWindowTitle = Kombinatorik
buildCircuitButton = Schaltung aufbauen
exportLatexButton = TeX exportieren
exportTableButton = Tabelle exportieren
expressionTab = Ausdruck
expressionTabTip = Logische Ausdrücke ansehen und bearbeiten.
importTableButton = Tabelle importieren
inputsOutputsTab = Eingänge und Ausgänge
inputsOutputsTabTip = Eingangs- und Ausgangsvariablen ansehen und bearbeiten.
minimizedTab = Minimierung
minimizedTabTip = Die kleinstmöglichen Ausdrücke ansehen und bearbeiten.
tableTab = Tabelle
tableTabTip = Wahrheitstabelle ansehen und bearbeiten.
#
# gui/BuildCircuitButton.java
#
buildConfirmReplaceMessage = Sind Sie sicher, daß Sie die Schaltung %s ersetzen möchten?
buildConfirmReplaceTitle = Ersetzen bestätigen
buildDialogErrorTitle = Konnte Schaltung nicht aufbauen
buildDialogTitle = Schaltung aufbauen
buildDuplicatedNameError = Der Schaltungsname kann nicht mit dem Namen eines Eingangs oder eines Ausgangs übereinstimmen. Bitte geben Sie einen anderen Namen an.
buildNameLabel = Schaltungsname:
buildNandsLabel = Nur NAND-Gatter
buildNeedCircuitError = Bitte einen Schaltungsnamen angeben.
buildNeedProjectError = Bitte ein Zielprojekt angeben.
buildProjectLabel = Zielprojekt:
buildTwoInputsLabel = Nur Gatter mit zwei Eingängen
replaceCircuitAction = Schaltung ersetzen
#
# gui/CsvReadParameterDialog.java
#
ConfirmCsvParameters = Weitermachen
cvsFilePreview = Vorschau der ersten vier Zeilen der eingelesenen Datei:
seperatorSpace = (Leertaste)
SeperatorTab = (Tabulator)
UsedQuotesInFile = Wählen Sie das Zeichen "quote", das in der csv-Datei verwendet wird:
UsedSeperatorInFile = Wählen Sie das Zeichen "Separator", das in der CSV-Datei verwendet wird:
#
# gui/ExportLatexButton.java
#
cantWriteMessage = Kann keine Datei schreiben: %s
confirmOverwriteMessage = Sind Sie sicher, dass Sie die Datei %s überschreiben möchten?
confirmOverwriteTitle = Überschreiben bestätigen
notFileMessage = Keine Akte: %s
saveButton = Wahrheitstabelle exportieren
saveErrorTitle = Fehler beim Speichern der Datei
#
# gui/ExpressionTab.java
#
cantImportFormatError = Diese Art von Daten kann nicht importiert werden.
outputExpressionEdit = Ausgabeausdrücke (Doppelklick zum Bearbeiten):
#
# gui/ImportTableButton.java
#
cantReadMessage = Datei kann nicht gelesen werden: %s
DoNotKnowHowto = Ich weiß nicht, wie man die Datei'%s' liest oder schreibt (Erweiterung sollte .txt oder.csv sein).
openButton = Wahrheitstabelle importieren
openErrorTitle = Fehler beim Lesen der Datei
#
# gui/KarnaughMapPanel.java
#
karnaughNoInputsError = Keine Eingänge vorhanden.
karnaughNoOutputError = Kein Ausgang ausgewählt.
karnaughTooManyInputsError = Zu viele Eingänge für die Tabelle.
NoSelectedKmapGroup = Keine Gruppe ausgewählt.
SelectedKmapGroup = Ausgewählte Gruppe:
#
# gui/MinimizedTab.java
#
expressionAltLogicrepresentation = Alternative logische
expressionCalc = Berechnung des Ausdrucks
expressionLogicrepresentation = Logisch
expressionMathrepresentation = Mathematisch
ExpressionNotation = Notation:
expressionProgbitsrepresentation = Programmierung mit Bits
expressionProgboolsrepresentation = Programmierung mit Boolean's
KMapLinedStyle = Ausgekleidet
KmapNumberedStyle = Nummeriert
KmapStyle = Stil:
minimizedFormat = Format:
minimizedProductOfSums = Konjunktive Normalform
minimizedSetButton = Als Ausdruck festlegen
minimizedSumOfProducts = Disjunktive Normalform
#
# gui/OutputSelector.java
#
outputSelectLabel = Ausgang:
#
# gui/TableTab.java
#
tableCompact = Duplizierte Zeilen komprimieren
tableExpand = Alle Zeilen anzeigen
tableNoInputs = (keine Eingaben)
tableNoOutputs = (keine Ausgänge)
tableRowsShown = %d der angezeigten %d Zeilen
#
# gui/TableTabCaret.java
#
tabcaretCompactRows = Zeilen verdichten
#
# gui/TableTabClip.java
#
clipPasteEndError = Der Inhalt der Zwischenablage ist länger als die Tabelle.
clipPasteErrorTitle = Fehler beim Einfügen
clipPasteSizeError = Der Einfügebereich muß die gleiche Länge wie die Zwischenablage aufweisen.
clipPasteSupportedError = Der Inhalt der Zwischenablage konnte nicht eingefügt werden.
#
# gui/VariableTab.java
#
inputVariables = Eingangs Variablen
outputVariables = Ausgangs Variablen
variableClickToAdd = Klicken Sie hier, um eine neue Variable hinzuzufügen.
variableDuplicateError = Eine Variable gleichen namens besteht bereits.
variableMaximumError = (Maximale Größe von %s erreicht.)
variablePartError = Der Name darf '%s' nicht enthalten.
variableRangeFinalPar = Bereich: Fehlender ]-Klammer direkt nach dem LSB-Index
variableRangeInvalChar = Bereich: Ungültige Zeichen nach dem ]-Klammer
variableRangeMSBWrong = Bereich: [-Klammer sollte von einer Zahl gefolgt werden.
variableRangeStartPar = Bereich: Fehlender [-Klammer
variableRangeWrongLB = Bereich: MSB-Index muss größer/gleich LSB-Index sein.
variableRangeWrongSep = Bereich: MSB-Index und LSB-Index müssen durch .. getrennt werden.
variableStartError = Name muß mit einem Buchstaben anfangen.
#
# model/Entry.java
#
busError = Konflikt mit den Ausgangswerten der Schaltung.
oscillateError = Schaltung schwingt.
#
# model/Parser.java
#
badVariableName = %s ist keine Eingangsvariable.
implicitAndOperator = (Implizites AND)
invalidCharacterError = Unbekanntes Zeichen: %s
lparenMissingError = Keine passende öffnende Klammer.
missingBraceError = No matching brace: "%s"
missingIdentifierError = Fehlender Identifikator vor dem Index: "%s"
missingLeftOperandError = Fehlender linker Operand für Operator %s.
missingRightOperandError = Fehlender rechter Operand für Operator %s.
missingSubscriptError = Keine passende Klammer: "%s"
rparenMissingError = Keine passende schließende Klammer.
unexpectedApostrophe = Unerwarteter Apostroph ("'")
unexpectedAssignmentError = Unerwarteter Zuweisungsoperator: "%s"
#
# model/Var.java
#
badVariableBitFormError = Der Variablenname muss in der Form 'Name[i]' sein.
badVariableColonError = Der Variablenname muss vor dem ':' erscheinen.
badVariableIndexError = Der Variablebitindex muss eine ganze Zahl sein.
variableFormat = Variablen müssen die Form 'Name[N..0]' haben.
variableTooMuchBits = Variablen dürfen nicht mehr als 32 Bit breit sein.


