#
# arith/Adder.java
#
adderCarryInTip=Carry In: אם 1, נוסף 1 נוסף לפלט
adderCarryOutTip=בצע: 1 אם הסכום עולה על הסיביות הזמינות
adderComponent=Adder
adderInputTip=קלט: אחד המספרים שיש להוסיף
adderOutputTip=פלט: סכום התשומות (בתוספת carry in)
#
# arith/ArithmeticLibrary.java
#
arithmeticLibrary=אריתמטיקה
#
# arith/BitAdder.java
#
bitAdderComponent=מוסיף סיביות
bitAdderInputTip=קלט: הסיביות שיש לספור
bitAdderOutputManyTip=פלט: כמה סיביות קלט הם 1
gateInputsAttr=מספר כניסות
#
# arith/BitFinder.java
#
bitFinderComponent=Bit Finder
bitFinderFindLabel=מצא
bitFinderHighLabel=גבוה
bitFinderHighOption=%s מהסדר הגבוה ביותר
bitFinderIndexHighTip=אינדקס: אינדקס של %s מהסדר הגבוה ביותר של הקלט
bitFinderIndexLowTip=אינדקס: אינדקס של %s מהסדר הנמוך ביותר של הקלט
bitFinderInputTip=קלט: הביטים שיש לחפש
bitFinderLowLabel=נמוך
bitFinderLowOption=%s מהסדר הנמוך ביותר
bitFinderPresentTip=קיים: 1 אם הקלט מכיל %s
bitFinderTypeAttr=סוג
#
# arith/Comparator.java
#
comparatorComponent=Comparator
comparatorEqualTip=שווה: 1 אם A שווה ל-B
comparatorGreaterTip=גדול יותר: 1 אם A גדול מ-B
comparatorInputATip=A: המספר שלפני פעולת ההשוואה
comparatorInputBTip=B: המספר שאחרי פעולת ההשוואה
comparatorLessTip=פחות: 1 אם A קטן מ-B
comparatorType=סוג מספרי
twosComplementOption=השלמה של 2
unsignedOption=לא חתום
#
# arith/Divider.java
#
dividerComponent=מחלק
dividerDividendLowerTip=דיבידנד נמוך יותר: החצי התחתון של המספר לחלוקה
dividerDividendUpperTip=Dividend Upper: החצי העליון של המספר לחלוקה
dividerDivisorTip=מחלק: המספר שבו מחלקים
dividerOutputTip=פלט: התוצאה של חלוקת הדיבידנד במחלק
dividerRemainderOutput=rem
dividerRemainderTip=Remainder: השאר (דיבידנד - פלט * מחלק)
dividerUpperInput=עליון
#
# arith/FPAdder.java
#
fpAdderComponent=מוסיף נקודה צפה
fpAdderOutputTip=פלט: סכום התשומות
fpErrorTip=שגיאה: 1 אם הקלט או הפלט הם NaN
#
# arith/FPComparator.java
#
fpComparatorComponent=השוואת נקודה צפה
#
# arith/FPDivider.java
#
fpDividerDividendTip=דיבידנד: המספר שיש לחלק
fpDividerComponent=מחלק נקודה צפה
#
# arith/FPMultiplier.java
#
fpMultiplierComponent=מכפיל נקודה צפה
fpMultiplierOutputTip=פלט: המכפלה של התשומות
#
# arith/FPNegator.java
#
fpNegatorComponent=שלילי נקודה צפה
fpNegatorOutputTip=שלילת הקלט
#
# arith/FPSubtractor.java
#
fpSubtractorComponent=מחסיר נקודה צפה
#
# arith/FPToInt.java
#
ceilOption=עיגול כלפי מעלה
floorOption=עיגול למטה
fpToIntComponent=נקודה צפה למספר שלם
fpToIntInputTip=קלט: ערך הנקודה הצפה להמרה
fpToIntOutputTip=פלט: פלט בסימן המכיל את ערך הנקודה הצפה המעוגלת
fpToIntType=מצב עיגול
roundOption=סיבוב אל הקרוב ביותר
truncateOption=Truncate
#
# arith/IntToFP.java
#
intToFPComponent=מספר שלם לנקודה צפה
intToFPInputTip=קלט: המספר השלם להמרה לנקודה צפה
intToFPOutputTip=פלט: צורת הנקודה הצפה של הקלט
#
# arith/Multiplier.java
#
multiplierCarryInTip=Carry In: סכום שיש להוסיף לפלט
multiplierCarryOutTip=בצע: הסיביות העליונות של המוצר
multiplierComponent=מכפיל
multiplierInputTip=קלט: אחד המספרים להכפלה
multiplierOutputTip=פלט: המכפלה של התשומות, בתוספת ה-carry in
#
# arith/Negator.java
#
negatorComponent=Negator
negatorInputTip=קלט: המספר שיש לשלול
negatorOutputTip=פלט: שלילת הקלט המשלימה של שניים
#
# arith/Shifter.java
#
shiftArithmeticRight=ימין אריתמטי
shifterComponent=Shifter
shifterDistanceTip=מרחק: כמה רחוק להזיז את הקלט
shifterInputTip=קלט: סיביות שיש להזיז
shifterOutputTip=פלט: תוצאה של הסטת הקלט
shifterShiftAttr=סוג Shift
shiftLogicalLeft=שמאל לוגי
shiftLogicalRight=ימין לוגי
shiftRollLeft=סובב שמאלה
shiftRollRight=סובב ימינה
#
# arith/Subtractor.java
#
subtractorBorrowInTip=לווה ב: אם 1, הפלט מצטמצם ב-1
subtractorBorrowOutTip=הלוו: 1 אם ההפרש מניב ערך שלילי
subtractorComponent=מחסיר
subtractorMinuendTip=Minuend: המספר שממנו יש להחסיר
subtractorOutputTip=פלט: ההפרש של ה-minuend וה-subtrahend
subtractorSubtrahendTip=Subtrahend: המספר שיש לגרוע מהמינואנד
#
# base/BaseLibrary.java
#
baseLibrary=בסיס
#
# base/Text.java
#
textComponent=תווית
textFontAttr=גופן
textColorAttr=צבע
textHorzAlignAttr=יישור אופקי
textHorzAlignCenterOpt=מרכז
textHorzAlignLeftOpt=Left
textHorzAlignRightOpt=Right
textTextAttr=טקסט
textVertAlignAttr=יישור אנכי
textVertAlignBaseOpt=Base
textVertAlignBottomOpt=Bottom
textVertAlignCenterOpt=מרכז
textVertAlignTopOpt=למעלה
#
# base/VhdlParser.java
#
CannotFindEntityException=לא ניתן למצוא את הצהרת הישות
emptySourceException=לא ניתן לנתח תוכן ריק
genericDeclarationException=תחביר גנרי לא חוקי
genericTypeException=סוג גנרי לא נתמך
genericValueException=ערך ברירת מחדל כללי לא מזוהה
invalidTypeException=סוג יציאה לא חוקי
portDeclarationException=תחביר יציאה לא חוקי
portTypeException=סוג יציאה לא נתמך: "%s". אנא השתמש רק ב-"std_logic" ו-"std_logic_vector".
#
# Builtin.java
#
builtinLibrary=מובנה
#
# gates/AndGate.java
#
andGateComponent=AND Gate
#
# שערים/Buffer.java
#
bufferComponent=מאגר
#
# שערים/ControlledBuffer.java
#
controlledBufferComponent=מאגר מבוקר
controlledControlOption=מיקום קו בקרה
controlledInverterComponent=מהפך מבוקר
controlledLeftHanded=שמאלני
controlledRightHanded=ימני
#
# שערים/EvenParityGate.java
#
evenParityComponent=זוגיות זוגית
#
# gates/GateAttributes.java
#
gateOutput01=0/1
gateOutput0Z=0/צף
gateOutputAttr=ערך פלט
gateOutputZ1=צף/1
gateSizeNormalOpt=בינוני
xorBehaviorAttr=התנהגות מרובה קלט
xorBehaviorOdd=כאשר מספר אי זוגי פועל
xorBehaviorOne=כאשר קלט אחד מופעל
#
# gates/GatesLibrary.java
#
gatesLibrary=שערים
#
# gates/NandGate.java
#
nandGateComponent=שער NAND
#
# gates/NegateAttribute.java
#
gateNegateAttr=שלילת %s
#
# gates/NorGate.java
#
norGateComponent=שער NOR
#
# gates/NotGate.java
#
notGateComponent=NOT Gate
#
# gates/OddParityGate.java
#
oddParityComponent=זוגיות מוזרה
#
# gates/OrGate.java
#
orGateComponent=OR Gate
#
# gates/PLA.java
#
plaBitWidthIn=רוחב סיביות ב
plaBitWidthOut=רוחב סיביות החוצה
input=קלט
output=פלט
PLA=PLA
plaClickToEdit=(לחץ כדי לערוך)
plaEditMenuItem=ערוך תוכנית PLA...
plaProgram=תוכנית
#
# gates/PLATable.java
#
plaEditorTitle=עורך תוכניות PLA
plaFileCreateError=לא ניתן ליצור קובץ.
plaFileOpenError=לא ניתן לפתוח את הקובץ.
plaLoadDialogTitle=טען תוכנית PLA
plaLoadErrorTitle=שגיאה בטעינת תוכנית PLA
plaSaveDialogTitle=שמור תוכנית PLA
plaSaveErrorTitle=שגיאה בשמירת תוכנית PLA
#
# gates/XnorGate.java
#
xnorGateComponent=שער XNOR
#
# gates/XorGate.java
#
xorGateComponent=שער XOR
#
# InstanceComponent.java
#
KeywordNameError=תווית היא מילת מפתח שמורה ולא ניתן להשתמש בה. נא לציין תווית אחרת.
MatchedLabelNameError=התווית ושם הרכיב עשויים שלא להיות זהים (הם לא תלויי רישיות). נא לציין תווית שונה משם הרכיב.
#
# InstanceTextField.java
#
changeLabelAction=שנה תווית
#
# io/DipSwitch.java
#
DIP=DIP
DipSwitchComponent=מתג DIP
nrOfSwitch=מספר המתג
#
# io/LedCluster.java
#
#
# io/DotMatrix.java
#
ioInputColumn=עמודות
ioInputRow=שורות
ioInputSelect=בחר שורות/עמודות
ioMatrixCols=עמודות מטריקס
ioMatrixInput=פורמט קלט
ioMatrixPersistenceAttr=Light Persistence
ioMatrixRows=שורות מטריקס
ioMatrixShape=צורת נקודה
ioShapeCircle=מעגלי
ioShapeSquare=ריבוע
ioShapePaddedSquare=ריבוע מרופד
ioLedBarComponent=סרגל LED
ioLedBarSegments=פלחים
ioLedBarInput=פורמט קלט
ioLedBarInputSeparated=מופרד
ioLedBarInputOneWire=חוט אחד
#
# io/extra/Buzzer.java
#
buzzerFrequecy=תדר
buzzerVolume=נפח
buzzerVolumeBitWidth=רוחב סיביות נפח
buzzerUnitDhz=dHz (0.1Hz)
buzzerWaveform=צורת גל
buzzerSine=סינוס
buzzerSquare=ריבוע
buzzerSmoothLevel=רמה חלקה
buzzerSmoothWidth=רוחב חלון חלק
buzzerChannel=ערוץ
buzzerChannelBoth=שניהם
buzzerChannelLeft=שמאלה
buzzerChannelRight=נכון
buzzerTriangle=משולש
buzzerSawtooth=שן מסור
buzzerNoise=רעש לבן
buzzerDutyCycle=מחזור עבודה
enableSound=אפשר צליל
Hz=Hz
#
# io/extra/DigitalOscilloscope.java
#
BorderColor=צבע גבול
bothOption=שניהם
ClearDiagram=תרשים ברור
DigitalOscilloscopeClock=שעון
DrawClockFrontLine=צייר קו קדמי של השעון
noOption=אין
ShowClockAttribute=הצג תכונת שעון
stdTriggerFalling=קצה נופל
stdTriggerRising=קצה עולה
#
# io/extra/ExtraIoLibrary.java
#
buzzerComponent=זמזם
DigitalOscilloscopeComponent=אוסצילוסקופ דיגיטלי
PlaRomComponent=PLA
Slider=Slider
switchComponent=Switch
#
# io/extra/PlaRom.java
#
memCSTip=בחירת שבב: 0 משבית את הרכיב
PlaANDAttr=ו
PlaOutputsAttr=פלט
ramCSLabel=sel
#
# io/extra/PlaRomData.java
#
PlaEditWindowTitel=Pla Rom %s חלון עריכה
#
# io/extra/ProgrammableGenerator.java
#
NStateAttr=Nr. של מדינות
ProgrammableGeneratorComponent=פרוגר. גֵנֵרָטוֹר
ramClearMenuItem=נקה תוכן
ramEditMenuItem=ערוך תוכן...
romContentsAttr=תוכן
romContentsValue=(לחץ כדי לערוך)
#
# io/extra/Slider.java
#
left_to_rightOption=משמאל לימין
right_to_leftOption=מימין לשמאל
#
# io/HexDigit.java
#
hexDigitDataTip=נתונים: לנשנש לתצוגה ב-hex
hexDigitDPTip=DecimalPoint: מדליק את הנקודה העשרונית
#
# io/IoLibrary.java
#
buttonComponent=לחצן
dipswitchComponent=מתג דיפ
dotMatrixComponent=LED Matrix
hexDigitComponent=תצוגת ספרות hex
ioActiveAttr=Active On High?
ioBackgroundColor=רקע
ioColorAttr=צבע
ioLibrary=קלט/פלט
ioOffColor=צבע כבוי
ioOnColor=On Color
joystickComponent=ג'ויסטיק
ledComponent=LED
pioComponent=יציאת I/O
repLBComponent=אוטובוס מקומי של Reptar
RGBledComponent=LED RGB
sevenSegmentComponent=תצוגה של 7 פלחים
ttyComponent=TTY
#
# io/Button.java
#
buttonPressAttr=רמת היגיון
buttonPressActive=פעיל בלחיצה
buttonPressPassive=פסיבי בלחיצה
#
# io/Joystick.java
#
ioBitWidthAttr=רוחב סיביות
joystickCoordinateX=פלט: x-coordinate
joystickCoordinateY=פלט: y-coordinate
#
# io/Keyboard.java
#
keybAvailTip=זמין: 1 כאשר מאגר מכיל תווים
keybBufferLengthAttr=אורך מאגר
keybClearTip=נקה: מאגר אחד מרוקן
keybClockTip=שעון: טריגר צורך את התו הקדמי של המאגר
keybDesc=מקלדת (מכסה מאגר. %s)
keybEnableTip=הפעלת קריאה: 0 משבית את השעון
keyboardComponent=מקלדת
keybOutputTip=נתונים: ערך ASCII של התו הקדמי של המאגר
#
# io/PortIO.java
#
pioDirection=סוג יציאה:
pioInput=כניסות בלבד
pioInputs=כניסות %s
pioIOMultiple=I/O (הפעלה לכל סיביות)
pioIOSingle=I/O (הפעלה יחידה)
pioNumber=מספר הסיכות
pioOutEnable=הפעלת פלט
pioOutEnables=פלט מאפשר %s
pioOutput=פלטים בלבד
pioOutputs=פלטים %s
#
# io/ReptarLocalBus.java
#
repLBTip=B טיפ
#
# io/RgbLed.java
#
BLUE=קלט כחול
GREEN=קלט ירוק
RED=קלט אדום
#
# io/SevenSegment.java
#
DecimalPoint=נקודה עשרונית
Segment_A=פלח A
Segment_B=פלח B
Segment_C=פלח C
Segment_D=פלח D
Segment_E=פלח E
Segment_F=פלח F
Segment_G=פלח G
SevenSegDP=יש נקודה עשרונית:
#
# io/Tty.java
#
ttyClearTip=נקה: 1 מנקה מסך
ttyClockTip=שעון: טריגר מוסיף תו בקלט
ttyColsAttr=עמודות
ttyDesc=TTY (%s שורות, %s עמודות)
ttyDescShort=TTY
ttyEnableTip=הפעלת כתיבה: 0 משבית את השעון
ttyInputTip=נתונים: ערך ASCII של התו הבא לכתיבה
ttyRowsAttr=שורות
#
# io/Video.java
#
rgbVideoCLK=שעון
rgbVideoColor=מודל צבע
rgbVideoComponent=וידאו RGB
rgbVideoCursor=סמן
rgbVideoData=נתונים בפורמט %s
rgbVideoHeight=גובה
rgbVideoReset=איפוס התנהגות
rgbVideoRST=איפוס
rgbVideoScale=קנה מידה
rgbVideoWE=הפעלה של כתיבה
rgbVideoWidth=רוחב
rgbVideoX=קואורדינטת X
rgbVideoY=קואורדינטת Y
#
# bfh/bcd2sevenseg.java
#
BCDValue=ערך BCD
BCD2SevenSegment=קטע BCD עד שבעה
#
# bfh/BfhLibrary.java
#
BFHMegaFunctions=מגה פונקציות BFH
Bin2BCD=בינארי ל-BCD
#
# bfh/bin2bcd.java
#
BinaryDataBits=סיביות נתונים בינאריים
BinaryInputTip=קלט בינארי
#
# memory/AbstractFlipFlop.java
#
flipFlopClockTip=שעון: עדכוני מצב על טריגר
flipFlopNotQTip=השלמה למצב הכפכף הנוכחי
flipFlopPresetTip=מוגדר מראש: כאשר 1, הצמד את המצב ל-1 באופן אסינכרוני
flipFlopQTip=מצב הכפכף הנוכחי
flipFlopResetTip=נקה: כאשר 1, הצמד את המצב ל-0 באופן אסינכרוני
#
# memory/Counter.java
#
counterCarryTip=Carry: הוא 1 כאשר הערך מגיע למקסימום (מינימום אם יורד)
counterClockTip=שעון: הערך עשוי להתעדכן בעת ההדק
counterComponent=מונה
counterDataTip=נתונים: ערך לטעינה במונה
counterEnableLabel=ct
counterEnableTip=Enable: כאשר 1, מונה גדל או יורד
counterGoalAttr=פעולה בגלישה
counterGoalContinue=המשך לספור
counterGoalLoad=טען את הערך הבא
counterGoalStay=להישאר במחיר
counterGoalWrap=עוטף
counterLabel=ctr
counterLoadTip=Load: כאשר 1, נטען מקלט נתונים
counterMaxAttr=ערך מקסימלי
counterQTip=פלט: הערך הנוכחי של המונה
counterResetTip=נקה: כאשר 1, מתאפס ל-0 באופן אסינכרוני
counterUpDownTip=למעלה למטה: כאשר 1, מונה גדל, כאשר 0, ירידת מונה
#
# memory/JKFlipFlop.java
#
jkFlipFlopComponent=J-K Flip-Flop
#
# זיכרון/Mem.java
#
memAsyncRead=קריאה אסינכרונית:
memByte=שימוש בתים מאפשר
memDual=Dual
memEnables=מאפשר:
memLine=השתמש באפשרויות קו
memLineSize=גודל שורה
memMisaligned=לאפשר התאמה לא נכונה?
memOcto=Octo
memQuad=Quad
memRaw=קריאה אחרי כתיבה
memReadBehav=התנהגות קריאה
memSingle=סינגל
memWar=כתוב לאחר קריאה
ramAddrWidthAttr=רוחב סיביות כתובת
ramDataWidthAttr=רוחב סיביות נתונים
ramSelAttr=בחר
stdTriggerHigh=רמה גבוהה
stdTriggerLow=רמה נמוכה
#
# memory/MemMenu.java
#
ramConfirmClearMsg=האם אתה בטוח שברצונך לאפס את הזיכרון?
ramConfirmClearTitle=אשר נקה
ramLoadMenuItem=טען תמונה...
ramSaveMenuItem=שמור תמונה...
#
# memory/MemoryLibrary.java
#
dFlipFlopComponent=D Flip-Flop
memoryLibrary=זיכרון
tFlipFlopComponent=T Flip-Flop
#
# זיכרון/Ram.java
#
ramComponent=זיכרון RAM
#
# memory/RamAppearance.java
#
memAddrTip=כתובת: מיקום שנגיש בזיכרון
memDataTip=נתונים: ערך נטען מהכתובת
memDataTip0=נתונים: ערך נטען מכתובת+0
memDataTip1=נתונים: ערך נטען מכתובת+1
memDataTip2=נתונים: ערך נטען מכתובת+2
memDataTip3=נתונים: ערך נטען מכתובת+3
ramByteEnableTip0=הפעלת בייט עבור בייט 0
ramByteEnableTip1=הפעלת בייט עבור בייט 1
ramByteEnableTip2=הפעלת בייט עבור בייט 2
ramByteEnableTip3=הפעלת בייט עבור בייט 3
ramClkTip=שעון: ערך הזיכרון מתעדכן עם עלייה מ-0 ל-1
ramClrPin=Clear: one מגדיר את כל מיקומי הזיכרון ל-0
ramInTip=קלט: ערך שיש לאחסן בכתובת
ramInTip0=קלט: ערך שיש לאחסן בכתובת+0
ramInTip1=קלט: ערך שיש לאחסן בכתובת+1
ramInTip2=קלט: ערך שיש לאחסן בכתובת+2
ramInTip3=קלט: ערך שיישמר בכתובת+3
ramLETip0=הפעלת שורה עבור כתובת+0
ramLETip1=הפעלת קו עבור כתובת+1
ramLETip2=הפעלת קו עבור כתובת+2
ramLETip3=הפעלת קו עבור כתובת+3
ramOETip=טען: אם 1, טען זיכרון לפלט
ramWETip=חנות: אם 1, אחסן קלט בזיכרון
#
# memory/RamAttributes.java
#
ramBidirDataBus=אפיק נתונים דו-כיווני אחד
ramByteEnables=בקרת כתיבה של קריאה
RamClearPin=השתמש בסיכה שקופה
ramDataAttr=יישום אפיק נתונים
ramNoByteEnables=מילה שלמה קריאה/כתיבה בלבד
ramSeparateDataBus=אפיק נתונים נפרד לקריאה וכתיבה
ramTypeAttr=סוג Ram
ramTypeNonVolatile=לא נדיף
ramTypeVolatile=נדיף
ramWithByteEnables=השתמש ב-byte enables
#
# memory/Random.java
#
randomClockTip=שעון: הערך עשוי להתעדכן בעת ההדק
randomComponent=מחולל אקראי
randomLabel=אקראי
randomNextTip=הפעל: צעדים להמשך ברצף על הפעלת השעון
randomQTip=פלט: המספר הנוכחי ברצף
randomResetTip=נקה: כאשר 1, מתאפס ל-Seed ראשוני באופן אסינכרוני
randomSeedAttr=Seed
randomWidthLabel=רוחב: %d
#
# memory/Register.java
#
registerClkTip=שעון: עדכוני ערך בטריגר
registerClrTip=Clear: כאשר 1, הצמד את הערך ל-0 באופן אסינכרוני
registerComponent=Register
registerDTip=נתונים: ערך מאוחסן על הפעלת השעון
registerEnableTip=Enable: כאשר 0, מפעילי שעון אינם יעילים
registerLabel=reg
registerQTip=פלט: הערך הנוכחי של האוגר
registerShowInTab=הצג בכרטיסיית רישום
registerWidthLabel=(%sb)
#
# זיכרון/Rom.java
#
romComponent=ROM
#
# memory/RomContentsListener.java
#
romChangeAction=ערוך את תוכן ה-ROM
#
# memory/ShiftRegister.java
#
shiftRegClearTip=נקה: כאשר 1, מאפס הכל ל-0 באופן אסינכרוני
shiftRegClockTip=שעון: ערכים עשויים להתעדכן בעת ההדק
shiftRegInTip=קלט: ערך שיועבר לשלב הראשון
shiftRegisterComponent=Shift Register
shiftRegisterLabel1=shift reg
shiftRegisterLabel2=%sx%s
shiftRegLengthAttr=מספר שלבים
shiftRegLoadTip=עומס: כאשר 1 (עם shift = 0), כל השלבים נטענים מכניסות
shiftRegOutTip=פלט: הוא התוכן של השלב האחרון
shiftRegParallelAttr=עומס מקביל
shiftRegShiftTip=Shift: Shift מושבת כאשר 0
#
# memory/SRFlipFlop.java
#
srFlipFlopComponent=S-R Flip-Flop
#
# plexers/BitSelector.java
#
bitSelectorComponent=בורר סיביות
bitSelectorDataTip=נתונים
bitSelectorGroupAttr=סיביות פלט
bitSelectorOutputTip=פלט: ערך של קבוצת ביטים שנבחרה מנתונים
bitSelectorSelectTip=בחירה: מזהה איזו קבוצה מהנתונים נבחרה
#
# plexers/Decoder.java
#
decoderEnableTip=Enable: כאשר אינו 0, הפלט שנבחר הוא 1
decoderOutTip=פלט %s
decoderSelectTip=בחירה: מזהה איזה פלט הוא 1
#
# plexers/Demultiplexer.java
#
demultiplexerEnableTip=Enable: כאשר אינו 0, הפלט שנבחר הוא קלט
demultiplexerInTip=קלט
demultiplexerOutTip=פלט %s
demultiplexerSelectTip=בחירה: מזהה איזה פלט מקבל קלט
#
# plexers/Multiplexer.java
#
multiplexerEnableTip=Enable: כאשר אינו 0, הפלט הוא הקלט שנבחר
multiplexerInTip=קלט %s
multiplexerOutTip=פלט
multiplexerSelectTip=בחירה: מזהה איזה קלט הופך לפלט
#
# plexers/PlexersLibrary.java
#
decoderComponent=מפענח
demultiplexerComponent=Demultiplexer
gateSizeAttr=גודל שער
gateSizeNarrowOpt=Narrow
gateSizeWideOpt=רחב
multiplexerComponent=Multiplexer
plexerDisabledAttr=פלט מושבת
plexerDisabledFloating=צף
plexerDisabledZero=אפס
plexerEnableAttr=כלול הפעל?
plexerLibrary=Plexers
plexerSelectBitsAttr=בחר ביטים
plexerThreeStateAttr=שלוש מדינות?
priorityEncoderComponent=Priority Encoder
#
# plexers/PriorityEncoder.java
#
priorityEncoderEnableInTip=אפשר קלט: 0 משבית את הרכיב
priorityEncoderEnableOutTip=אפשר פלט: 1 אם מופעל ואין כניסות הם 1
priorityEncoderGroupSignalTip=בחר קבוצה: 1 אם מופעל וכל קלט הוא 1
priorityEncoderInTip=קלט %s
priorityEncoderOutTip=פלט: כתובת של קלט אחד עם האינדקס הגבוה ביותר
#
# StdAttr.java
#
ioLabelColorAttr=צבע תווית
stdClassicAppearance=Logisim קלאסי
stdDataWidthAttr=סיביות נתונים
stdEvolutionAppearance=Logisim-HolyCross
stdFacingAttr=מול
stdFPDataWidthAttr=גודל צף
stdLabelAttr=תווית
stdLabelCenter=מרכז
stdLabelFontAttr=גופן תווית
stdLabelLocAttr=מיקום תווית
stdLabelVisibility=תווית גלויה
stdLogisimEvolutionAppearance=Logisim-Evolution
stdTriggerAttr=טריגר
stdSelectLocAttr=בחר מיקום
stdSelectBottomLeftOption=למטה/שמאל
stdSelectTopRightOption=למעלה/ימין
#
# tcl/TclLibrary.java
#
tclLibrary=TCL
#
# tcl/TclComponentAttributes.java
#
tclConsoleContentFile=קובץ תוכן TCL
#
# tcl/TclConsoleReds.java
#
tclConsoleReds=קונסולת TCL REDS
#
# tcl/TclGeneric.java
#
tclGeneric=TCL גנרי
tclInterfaceDefinition=ישות VHDL ממשק TCL
tclInterfaceDefinitionValue=(לחץ כדי לערוך)
#
# ttl/AbstractTtlGate.java
#
GNDPin=פין הארקה %s
VCCPin=פין VCC %s
#
# ttl/DisplayDecoder.java
#
BI=BI
BlankingInputInTip=ביטול
DisplayDecoderComponent=מפענח תצוגה
DisplayDecoderInTip=קלט
DisplayDecoderOutTip=פלט
ioMultiBit=רב סיביות
LampTestInTip=קלט בדיקת מנורה
LT=LT
memEnableLabel=en
RBI=RBI
RippleBlankingInputInTip=קלט הריקת אדוות
#
# ttl/TtlLibrary.java
#
ShowInternalStructure=הצג את המבנה הפנימי
TTL7400=7400: שער NAND מרובע בעל 2 כניסות
TTL7402=7402: שער NOR מרובע בעל 2 כניסות (מימין לשמאל)
TTL7404=7404: מהפך משושה
TTL7408=7408: שער AND מרובע בעל 2 כניסות
TTL7410=7410: שער NAND משולש עם 3 כניסות
TTL7411=7411: שער AND משולש עם 3 כניסות
TTL74125=74125: חוצץ אפיק מרובע, יציאות שלושה מצבים, הפעלה שלילית
TTL74151=74151: בורר נתונים של 8 שורות עד 1 שורה
TTL74153=74153: בורר נתונים כפול של 4 שורות עד 1
TTL74157=74157: בורר נתונים מרובע של 2 שורות עד 1
TTL74158=74158: בורר נתונים מרובע של 2 שורות עד 1 קו, פלט הפוך
TTL74138=74138: מפענח של 3 שורות עד 8 שורות
TTL74139=74139: מפענח דו-קוים ל-4 שורות
TTL7413=7413: שער NAND כפול עם 4 כניסות (שמיט-trigger)
TTL7414=7414: מהפך משומש (שמיט-טריגר)
TTL74161=74161: מונה סנכרון של 4 סיביות עם ניקוי אסינכרון
TTL74163=74163: מונה סנכרון של 4 סיביות עם ניקוי סינכרון
TTL74164=74164: אוגר העברה טורי-למקביל של 8 סיביות
TTL74165=74165: אוגר העברה מקביל לטורי של 8 סיביות עם עומס אסינכרוני
TTL74166=74166: אוגר העברה מקביל לטורי של 8 סיביות עם נקה אסינכרוני
TTL74175=74175: כפכף D מרובע, איפוס אסינכרוני
TTL7418=7418: שער NAND כפול עם 4 כניסות (שמיט-trigger)
TTL74181=74181: יחידה לוגית אריתמטית
TTL74182=74182: מחולל נשיאה מבט קדימה
TTL7419=7419: מהפך משומש (שמיט-טריגר)
TTL74192=74192: מונה עשור למעלה/למטה של 4 סיביות
TTL74193=74193: מונה בינארי של 4 סיביות למעלה/למטה
TTL7420=7420: שער NAND כפול בעל 4 כניסות
TTL7421=7421: שער AND כפול בן 4 כניסות
TTL7424=7424: שער NAND מרובע בעל 2 כניסות (שמיט-trigger)
TTL74240=74240: מאגרים אוקטליים עם יציאות הפוכות בשלושה מצבים
TTL74241=74241: מאגרים אוקטליים עם יציאות של שלושה מצבים ואפשרויות משלימות
TTL74244=74244: מאגרים אוקטליים עם יציאות של שלושה מצבים
TTL74245=74245: מקלטי אוטובוס אוקטליים עם יציאות של שלושה מצבים
TTL74266=74266: שער XNOR מרובע בעל 2 כניסות (אספן פתוח)
TTL7427=7427: שער NOR משולש בעל 3 כניסות
TTL74273=74273: אוקטלי D-Flipflop עם ברור
TTL74283=74283: מוסיף בינארי מלא של 4 סיביות
TTL74299=74299: אוגר משמרות אוניברסלי של 8 סיביות עם יציאות של שלושה מצבים
TTL7430=7430: שער NAND יחיד בעל 8 כניסות
TTL7432=7432: שער OR מרובע בעל 2 כניסות
TTL7434=7434: שער חיץ משושה
TTL7436=7436: שער NOR מרובע בעל 2 כניסות
TTL74377=74377: אוקטלי D-Flipflop עם Enable
TTL74381=74381: יחידה לוגית אריתמטית (ALU)
TTL7442=7442: BCD למפענח עשרוני
TTL7443=7443: עודף-3 למפענח עשרוני
TTL7444=7444: מפענח אפור עד עשרוני
TTL7447=7447: מפענח BCD ל-7 פלחים
TTL7451=7451: שער כפול AND-OR-INVERT
TTL7454=7454: ארבעה שערים רחבים AND-OR-INVERT
TTL74541=74541: מאגרים אוקטליים עם יציאות של שלושה מצבים
TTL7458=7458: שער AND-OR כפול
TTL7464=7464: שער 4-2-3-2 ו-או-היפוך
TTL74670=74670: קובץ רישום של 4 על 4 עם יציאות של שלושה מצבים
TTL747266=747266: שער XNOR מרובע בעל 2 כניסות
TTL7474=7474: כפכפים D כפולים עם מוגדר מראש וברור
TTL7485=7485: השוואת גודל של 4 סיביות
TTL7486=7486: שער XOR מרובע בעל 2 כניסות
VccGndPorts=אפשר יציאות Vcc ו- Gnd
#
# wiring/BitExtender.java
#
extenderInAttr=רוחב סיביות ב
extenderInputLabel=קלט
extenderInputType=קלט
extenderMainLabel=הארכה
extenderOneLabel=1
extenderOneType=אחד
extenderOutAttr=Bit Width Out
extenderSignLabel=סימן
extenderSignType=סימן
extenderTypeAttr=סוג הרחבה
extenderZeroLabel=0
extenderZeroType=אפס
#
# wiring/Clock.java
#
clockComponent=שעון
clockHighAttr=משך זמן גבוה
clockLowAttr=משך נמוך
clockPhaseAttr=היסט שלב
#
# wiring/Constant.java
#
constantComponent=קבוע
constantValueAttr=ערך
#
# wiring/DurationAttribute.java
#
clockDurationOneValue=1 סימון
clockDurationValue=%s טיקים
durationLargeMessage=הערך חייב להיות %s או פחות.
durationSmallMessage=הערך חייב להיות לפחות %s.
freqInvalidMessage=הערך אינו מספר שלם חוקי
PORDurationOneValue=1 שניה
PORDurationValue=%s שניות
#
# wiring/Pin.java
#
PinCancel=ביטול
pinComponent=Pin
PinEnterDecimal=הזן עשרוני
PinEnterFloat=Enter Float
pinFrozenQuestion=הסיכה קשורה למצב של מעגל העל. ליצור מצב מעגל חדש?
pinFrozenTitle=Pin Attached to Super Circle.
pinInputName=קלט
pinInputToolTip=הוסף סיכת קלט
PinOkay=בסדר
pinOutputAttr=פלט?
pinOutputName=פלט
pinOutputToolTip=הוסף פין פלט
pinPullAttr=התנהגות משיכה
pinPullDownOption=משוך למטה
pinPullNoneOption=ללא שינוי
pinPullUpOption=Pull Up
pinResetValue=ערך איפוס:
pinThreeStateAttr=שלוש מדינות?
#
# wiring/PowerOnReset.java
#
porHighAttr=POR-time
PowerOnResetComponent=POR
#
# wiring/Probe.java
#
probeComponent=בדיקה
#
# wiring/ProbeAttributes.java
#
probeNewPin=צורות חץ
stdAppearanceAttr=מראה
#
# wiring/PullResistor.java
#
pullComponent=נגד משיכה
pullErrorType=שגיאה
pullOneType=אחד
pullTypeAttr=כיוון משיכה
pullZeroType=אפס
#
# wiring/Transistor.java
#
transistorNDrain=ניקוז: מקור נמוך ימשוך ניקוז נמוך (רק כאשר השער גבוה)
transistorNGate=שער: כאשר הוא גבוה, מאפשר לזרם לזרום דרך הטרנזיסטור
transistorNSource=מקור: מקור נמוך ימשוך ניקוז נמוך (רק כאשר השער גבוה)
transistorPDrain=ניקוז: מקור גבוה ימשוך ניקוז גבוה (רק כאשר השער נמוך)
transistorPGate=שער: כשהוא נמוך, מאפשר לזרם לזרום דרך הטרנזיסטור
transistorPSource=מקור: מקור גבוה ימשוך ניקוז גבוה (רק כאשר השער נמוך)
transistorTypeAttr=סוג
transistorTypeN=N-Type
transistorTypeP=P-Type
#
# wiring/TransmissionGate.java
#
transmissionGateDrain=drain: נשלט על ידי מקור, בהתאם ל-p-gate ו-n-gate
transmissionGateNGate=n-gate: כאשר נמוך, מאפשר למקור נמוך לעבור דרכו לניקוז
transmissionGatePGate=p-gate: כאשר הוא גבוה, מאפשר למקור גבוה לעבור דרכו לניקוז
transmissionGateSource=source: שולט בניקוז, בהתאם ל-p-gate ו-n-gate
#
# wiring/Tunnel.java
#
tunnelComponent=מנהרה
#
# wiring/WiringLibrary.java
#
extenderComponent=Bit Extender
groundComponent=קרקע
noConnectionComponent=אל תתחבר
powerComponent=כוח
transistorComponent=טרנזיסטור
transmissionGateComponent=שער שידור
wiringLibrary=Wiring
input.output.extra=תוספת קלט/פלט

