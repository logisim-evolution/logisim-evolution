# This workflow will build a Java project with Gradle
# Using lowest supported JDK 11 and highest available JDK 16.
# For more information see:
#  https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: "Build"
on:
  push:
    # No need to run on push to "develop" as there should not be any direct pushes.
    # master is left just for emergency cases.
    branches: [ master ]
  pull_request:
    branches: [ master, develop ]

jobs:
  # I intentionally do not use "paths:" (as part of "push:"), i.e.
  #
  # on:
  #   push:
  #     branches: [ master ]
  #     paths:
  #     - src/**
  #
  # It's because that can cause confusion why there's no build action triggered on specific
  # PR, so to avoid this this action is intentionally always triggered, but it will skip
  # building process if nothing has changed in specified paths (sources).
  #
  analyze_sources:
    name: "Need to build the application?"
    runs-on: ubuntu-latest

    strategy:
      matrix:
        java-version: [ 11, 16 ]

    steps:
    - name: "Install packages..."
      run: sudo apt-get install sysvbanner

      # https://github.com/marketplace/actions/checkout
    - uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: "CHECKING IF BUILD STEP SHOULD RUN..."
      id: diff_check
      run: |
        git diff --name-only HEAD^ HEAD > changes.txt
        found=
        while IFS= read -r file; do
          if [[ "${file}" == src/* ]]; then
            found="YES"
            break
          fi
        done < changes.txt
        echo -e "\n*****************************************************************************\n"
        if [[ "${found}" == "YES" ]]; then
          echo "Source changes detected. Will run build step."
          echo "::set-output name=run_build::true"
        else
          # Let's make the "Nah" result stand out in the logs.
          banner "SKIP BUILD"
          echo "No changes in 'src/' folders detected."
          echo "::set-output name=run_build::false"
        fi
        echo -e "\n*****************************************************************************\n"

    - name: "Set up JDK"
      id: setup_jdk
      if: steps.diff_check.run_build == 'true'
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'adopt'

    - name: "Grant execute permission for gradlew"
      id: grant_x
      if: steps.diff_check.run_build == 'true'
      run: |
       chmod +x gradlew
       chmod +x gradle/wrapper/gradle-wrapper.jar

    - name: "Build with Gradle"
      id: run_gradle
      if: steps.diff_check.run_build == 'true'
      run: ./gradlew build -x checkstyleMain -x checkstyleTest

    - name: FOO
      run: echo "FOO"
