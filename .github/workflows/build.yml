# This workflow will build a Java project with Gradle
# Using lowest supported JDK 11 and highest available JDK 16.
# For more information see:
#  https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: "Build"
on:
  push:
    # No need to run on push to "develop" as there should not be any direct pushes.
    # master is left just for emergency cases.
    branches: [ master ]
  pull_request:
    branches: [ master, develop ]

# I intentionally do not use "paths:" (as part of "push:"), i.e.
#
# on:
#   push:
#     branches: [ master ]
#     paths:
#     - src/**
#
# It's because that can cause confusion why there's no build action triggered on specific
# PR, so to avoid this this action is intentionally always triggered, however it is now split
# into sub-jobs. One is trying to figure out if build is really needed and the other is building
# if first said it should so.

jobs:
  analyze_sources:
    name: "Do we need to build the application?"
    runs-on: ubuntu-latest

    outputs:
      run_build: ${{ steps.git_check.outputs.run_build }}

    steps:
    - name: "Install packages..."
      run: sudo apt-get install sysvbanner

      # https://github.com/marketplace/actions/checkout
    - name: "Checkout sources"
      uses: actions/checkout@v2
      with:
        fetch-depth: 2

    - name: "WILL BUILD STEP BE RUN?"
      id: git_check
      run: |
        git diff --name-only HEAD^ HEAD > changes.txt
        found="no"
        while IFS= read -r file; do
          if [[ "${file}" == src/* ]]; then
            found="yes"
            break
          fi
        done < changes.txt

        echo "::set-output name=run_build::${found}"
        echo -e "\n******************************************************************\n"
        banner "${found}"
        echo -e "\n******************************************************************\n"


  # Build step.
  build:
    name: "Gradle builder"
    runs-on: ubuntu-latest

    # Will run only if analyze_sources said so.
    needs: analyze_sources
    if: needs.analyze_sources.outputs.run_build == 'yes'

    strategy:
      matrix:
        java-version: [ 11, 16 ]

    steps:
    - name: "Checkout sources"
      uses: actions/checkout@v2

    - name: "Set up JDK"
      uses: actions/setup-java@v2
      with:
        java-version: ${{ matrix.java-version }}
        distribution: 'adopt'

    - name: "Grant execute permission for gradlew"
      run: |
       chmod +x gradlew
       chmod +x gradle/wrapper/gradle-wrapper.jar

    - name: "Build with Gradle"
      run: ./gradlew build -x checkstyleMain -x checkstyleTest

